# function_import --------------------

from transformers import BlipProcessor, BlipForQuestionAnswering
from PIL import Image
import requests
import os

# function_code --------------------

def detect_intruder(image_path: str, question: str = 'Who entered the room?') -> str:
    """
    Detect intruder in a room using a pretrained model from Hugging Face Transformers.

    Args:
        image_path (str): The path to the image file.
        question (str): The question to ask the model. Default is 'Who entered the room?'.

    Returns:
        str: The answer generated by the model.

    Raises:
        OSError: If there is not enough disk space to download the model.
    """
    processor = BlipProcessor.from_pretrained("facebook/blipp-vqa")
    model = BlipForQuestionAnswering.from_pretrained("facebook/blipp-vqa")
    
    image = Image.open(image_path)
        
    inputs = processor(image, question, return_tensors="pt")
    
    answer = model(**inputs).final_answer
    
    if os.path.exists('blipp-vqa/config.json'):
        os.remove('blipp-vqa/config.json')
        
    return answer

# test_function_code --------------------

def test_detect_intruder():
    """Test the detect_intruder function."""
    image_url = 'https://placekitten.com/200/300'
    image_path = 'test_image.jpg'
    with open(image_path, 'wb') as f:
        f.write(requests.get(image_url).content)

    try:
        answer = detect_intruder(image_path)
        assert isinstance(answer, str)
    finally:
        os.remove(image_path)

    return 'All Tests Passed'


# call_test_function_code --------------------

test_detect_intruder()