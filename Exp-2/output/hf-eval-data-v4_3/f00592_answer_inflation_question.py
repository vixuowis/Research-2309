# requirements_file --------------------

import subprocess

requirements = ["transformers"]

for package in requirements:
    subprocess.run(['pip', 'install', '-U', package])

# function_import --------------------

from transformers import pipeline

# function_code --------------------

def answer_inflation_question(question, context):
    """
    Answers a given question about inflation using a pretrained BERT model.

    Args:
        question (str): The question about inflation to be answered.
        context (str): The context within which the question should be answered.

    Returns:
        dict: The answer generated by the model.

    Raises:
        ValueError: If any of the inputs are empty or None.
    """
    if not question or not context:
        raise ValueError('The question and context must not be empty.')
    
    qa_pipeline = pipeline('question-answering', model='bert-large-cased-whole-word-masking-finetuned-squad')
    return qa_pipeline({'context': context, 'question': question})

# test_function_code --------------------

def test_answer_inflation_question():
    print("Testing started.")

    context = 'Inflation is an increase in the general price level of goods and services in an economy over time.'
    questions = [
        'What is inflation?',
        'How does inflation affect the economy?',
        'What causes inflation?' 
    ]

    # Test case 1: Correct data provided
    print("Testing case [1/3] started.")
    result = answer_inflation_question(questions[0], context)
    assert 'increase in the general price level' in result['answer'], f"Test case [1/3] failed: {result}"

    # Test case 2: Question is empty
    print("Testing case [2/3] started.")
    try:
        answer_inflation_question('', context)
    except ValueError as e:
        assert str(e) == 'The question and context must not be empty.', f"Test case [2/3] failed: {e}"

    # Test case 3: Context is empty
    print("Testing case [3/3] started.")
    try:
       answer_inflation_question(questions[2], '')
    except ValueError as e:
       assert str(e) == 'The question and context must not be empty.', f"Test case [3/3] failed: {e}"
    print("Testing finished.")

# call_test_function_line --------------------

test_answer_inflation_question()