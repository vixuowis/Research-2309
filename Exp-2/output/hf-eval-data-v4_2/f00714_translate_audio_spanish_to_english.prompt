{'code': "###Instruction: My coworker sent me a voice message in Spanish. Translate this audio message to English, so that I can understand it.\n###Input: spanish_voice_message.wav\n###Output: <<<domain>>>: Audio Audio-to-Audio\n<<<api_call>>>: pipeline('audio-to-audio-translation', model='facebook/textless_sm_sl_es')\n<<<api_provider>>>: Fairseq\n<<<explanation>>>: 1. Import the pipeline function from the fairseq library.\n2. Create an audio-to-audio translation pipeline using the pipeline function, specifying the model as 'facebook/textless_sm_sl_es'.\n3. This model is capable of translating audio messages from one language to another without the need for intermediate transcription.\n4. Use the created pipeline to translate the Spanish audio message 'spanish_voice_message.wav' to English and save the translated audio in a file named 'english_translation.wav'.\n<<<code>>>: from fairseq import pipeline\naudio_translation = pipeline('audio-to-audio-translation', model='facebook/textless_sm_sl_es')\ntranslated_audio = audio_translation('spanish_voice_message.wav')\ntranslated_audio.save('english_translation.wav')", 'api_call': 'textless_sm_sl_es()', 'provider': 'Fairseq', 'api_data': {'domain': 'Audio Audio-to-Audio', 'framework': 'Fairseq', 'functionality': 'speech-to-speech-translation', 'api_name': 'textless_sm_sl_es', 'api_call': 'textless_sm_sl_es()', 'api_arguments': None, 'python_environment_requirements': 'fairseq', 'example_code': 'https://huggingface.co/facebook/textless_sm_cs_en', 'performance': {'dataset': None, 'accuracy': None}, 'description': 'A Fairseq model for audio-to-audio speech-to-speech translation.'}}

