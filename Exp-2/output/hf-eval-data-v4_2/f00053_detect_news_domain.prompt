{'code': '###Instruction: I need a solution to detect whether a piece of news is talking about technology, sports, or politics.\n###Output: <<<domain>>>: Natural Language Processing Zero-Shot Classification\n<<<api_call>>>: CrossEncoder(\'cross-encoder/nli-roberta-base\')\n<<<api_provider>>>: Transformers\n<<<explanation>>>:1. Install transformers and sentence_transformers packages.\n2. Import the pipeline function from transformers. \n3. Create a classifier pipeline with zero-shot-classification, and load the model \'cross-encoder/nli-roberta-base\'. This model is capable of identifying the categories of the input text.\n4. Provide the given news text, and a list of candidate_labels which contains the labels you want to detect, i.e., \'technology\', \'sports\', and \'politics\'.\n5. Pass the provided news text and candidate_labels into the classifier pipeline.\n6. The classifier estimates probabilities for each label specified in candidate_labels. The result indicates the category with the highest probability.\n<<<code>>>: from transformers import pipeline\ntext = "Apple just announced the newest iPhone X"\ncandidate_labels = ["technology", "sports", "politics"]\nclassifier = pipeline("zero-shot-classification", model="cross-encoder/nli-roberta-base")\nresult = classifier(text, candidate_labels)\nprint(result)', 'api_call': "CrossEncoder('cross-encoder/nli-roberta-base')", 'provider': 'Transformers', 'api_data': {'domain': 'Natural Language Processing Zero-Shot Classification', 'framework': 'Transformers', 'functionality': 'Zero-Shot Classification', 'api_name': 'cross-encoder/nli-roberta-base', 'api_call': "CrossEncoder('cross-encoder/nli-roberta-base')", 'api_arguments': ['sentence1', 'sentence2'], 'python_environment_requirements': ['sentence_transformers', 'transformers'], 'example_code': "from transformers import pipeline\nclassifier = pipeline(zero-shot-classification, model='cross-encoder/nli-roberta-base')\nsent = Apple just announced the newest iPhone X\ncandidate_labels = [technology, sports, politics]\nres = classifier(sent, candidate_labels)\nprint(res)", 'performance': {'dataset': ['SNLI', 'MultiNLI'], 'accuracy': 'See SBERT.net - Pretrained Cross-Encoder'}, 'description': 'Cross-Encoder for Natural Language Inference trained on the SNLI and MultiNLI datasets. Outputs three scores corresponding to the labels: contradiction, entailment, neutral.'}}

