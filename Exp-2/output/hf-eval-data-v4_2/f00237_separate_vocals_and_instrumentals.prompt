{'code': "###Instruction: Create a program to separate music and vocals from an audio file using a pretrained model.\n###Output: <<<domain>>>: Audio Audio-to-Audio\n<<<api_call>>>: pipeline('audio-source-separation', model='mpariente/DPRNNTasNet-ks2_WHAM_sepclean')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>: 1. We import the 'pipeline' function from the transformers library provided by Hugging Face.\n2. We create a pipeline using the 'audio-source-separation' task, and initialize it with the model 'mpariente/DPRNNTasNet-ks2_WHAM_sepclean'. This model is trained for separating sources in audio files.\n3. We pass the audio file to the pipeline, and the model processes the file, separating the different sources (e.g., vocals and instruments) in the audio.\n4. The separated sources are then returned as output.\n<<<code>>>: from transformers import pipeline\naudio_separator = pipeline('audio-source-separation', model='mpariente/DPRNNTasNet-ks2_WHAM_sepclean')\nseparated_sources = audio_separator(audio_file_path)", 'api_call': "pipeline('audio-source-separation', model='mpariente/DPRNNTasNet-ks2_WHAM_sepclean')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Audio Audio-to-Audio', 'framework': 'Hugging Face Transformers', 'functionality': 'Asteroid', 'api_name': 'mpariente/DPRNNTasNet-ks2_WHAM_sepclean', 'api_call': "pipeline('audio-source-separation', model='mpariente/DPRNNTasNet-ks2_WHAM_sepclean')", 'api_arguments': 'audio_file', 'python_environment_requirements': 'transformers', 'example_code': '', 'performance': {'dataset': 'WHAM!', 'si_sdr': 19.316743490695334, 'si_sdr_imp': 19.317895273889842, 'sdr': 19.68085347190952, 'sdr_imp': 19.5298092932871, 'sir': 30.362213998701232, 'sir_imp': 30.21116982007881, 'sar': 20.15553251343315, 'sar_imp': -129.02091762351188, 'stoi': 0.97772664309074, 'stoi_imp': 0.23968091518217424}, 'description': 'This model was trained by Manuel Pariente using the wham/DPRNN recipe in Asteroid. It was trained on the sep_clean task of the WHAM! dataset.'}}

