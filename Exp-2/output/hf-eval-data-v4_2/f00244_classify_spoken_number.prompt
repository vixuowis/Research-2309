{'code': "###Instruction: A toy company wants to use your software to recognize spoken numbers (0-9) in English by young children for an interactive game. Please create an identifier.\n###Output: <<<domain>>>: Audio Audio Classification\n<<<api_call>>>: pipeline('audio-classification', model='mazkooleg/0-9up-wavlm-base-plus-ft')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>:1. Import the pipeline function from the transformers library provided by Hugging Face.\n2. Use the pipeline function to create an audio classification model.\n3. Specify the model 'mazkooleg/0-9up-wavlm-base-plus-ft' to be loaded. This model is fine-tuned to recognize spoken numbers (0-9) in English, specifically focused on young children's voices.\n4. Created classifier can be used to recognize spoken numbers from audio samples to intelligently interact with the children in the game.\n<<<code>>>: from transformers import pipeline\nspoken_number_classifier = pipeline('audio-classification', model='mazkooleg/0-9up-wavlm-base-plus-ft')\nprediction = spoken_number_classifier(child_speech_audio_file_path)\n", 'api_call': "pipeline('audio-classification', model='mazkooleg/0-9up-wavlm-base-plus-ft')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Audio Audio Classification', 'framework': 'Hugging Face Transformers', 'functionality': 'Transformers', 'api_name': 'mazkooleg/0-9up-wavlm-base-plus-ft', 'api_call': "pipeline('audio-classification', model='mazkooleg/0-9up-wavlm-base-plus-ft')", 'api_arguments': '', 'python_environment_requirements': 'transformers==4.27.3, torch==1.11.0, datasets==2.10.1, tokenizers==0.12.1', 'example_code': '', 'performance': {'dataset': 'mazkooleg/0-9up_google_speech_commands_augmented_raw', 'accuracy': 0.9973}, 'description': 'This model is a fine-tuned version of microsoft/wavlm-base-plus on the None dataset. It achieves the following results on the evaluation set: Loss: 0.0093, Accuracy: 0.9973.'}}

