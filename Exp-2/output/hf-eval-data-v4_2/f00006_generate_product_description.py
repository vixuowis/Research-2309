# requirements_file --------------------

!pip install -U transformers pillow

# function_import --------------------

from transformers import GenerativeImage2TextModel


# function_code --------------------

def generate_product_description(product_image):
    """
    Generates a product description based on the provided product image.

    Args:
        product_image (PIL.Image): A PIL Image object containing the product image.

    Returns:
        str: A text description of the product generated by the model.

    Raises:
        ValueError: If the input product_image is not of type PIL.Image.
    """
    if not isinstance(product_image, Image.Image):
        raise ValueError('Input product_image must be a PIL.Image object')
    git_model = GenerativeImage2TextModel.from_pretrained('microsoft/git-large-coco')
    product_description = git_model.generate_image_description(product_image)
    return product_description


# test_function_code --------------------

def test_generate_product_description():
    from PIL import Image
    print("Testing started.")
    sample_image_path = 'path_to_a_sample_product_image.jpg'  # Replace this with a path to an actual image
    sample_image = Image.open(sample_image_path)

    # Test case 1: Validate description generation
    print("Testing case [1/1] started.")
    description = generate_product_description(sample_image)
    assert isinstance(description, str), f"Test case [1/1] failed: Expected description to be a string, got {type(description).__name__} instead."
    print("Testing finished.")


# call_test_function_line --------------------

test_generate_product_description()