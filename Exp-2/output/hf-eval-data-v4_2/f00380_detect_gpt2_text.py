# requirements_file --------------------

!pip install -U transformers

# function_import --------------------

from transformers import pipeline

# function_code --------------------

def detect_gpt2_text(text: str) -> dict:
    """
    Detect if the input text was generated by a GPT-2 model using the RoBERTa base OpenAI Detector.

    Args:
        text (str): The text to be classified.

    Returns:
        dict: The classification result containing the 'label' and 'score' indicating whether the text
             was generated by GPT-2 or not.

    Raises:
        ValueError: If the input text is empty.
    """
    if not text:
        raise ValueError('Input text cannot be empty.')
    pipe = pipeline('text-classification', model='roberta-base-openai-detector')
    return pipe(text)

# test_function_code --------------------

def test_detect_gpt2_text():
    print("Testing started.")
    # For simplicity, here we use hardcoded examples instead of loading a dataset.

    # Test case 1: Testing with text that is clearly human-written
    print("Testing case [1/3] started.")
    human_text = "This is a sample sentence written by a human." # Replace with real example if available
    prediction = detect_gpt2_text(human_text)
    assert prediction['label'] == 'LABEL_0', f"Test case [1/3] failed: {prediction}"

    # Test case 2: Testing with text that is generated by GPT-2
    print("Testing case [2/3] started.")
    gpt2_text = "In a shocking finding, scientist discovered a herd of unicorns living in a remote, previously unexplored valley." # Replace with real example if available
    prediction = detect_gpt2_text(gpt2_text)
    assert prediction['label'] == 'LABEL_1', f"Test case [2/3] failed: {prediction}"

    # Test case 3: Testing with empty text
    print("Testing case [3/3] started.")
    empty_text = ""
    try:
        prediction = detect_gpt2_text(empty_text)
        assert False, "Test case [3/3] failed: No exception raised for empty input."
    except ValueError:
        pass
    print("Testing finished.")

# call_test_function_line --------------------

test_detect_gpt2_text()