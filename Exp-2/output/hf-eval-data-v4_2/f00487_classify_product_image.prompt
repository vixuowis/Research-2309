{'code': "###Instruction: We run an online store for selling electronic devices. We need to classify product images from our inventory and organize them.\n###Output: <<<domain>>>: Computer Vision Zero-Shot Image Classification\n<<<api_call>>>: pipeline('image-classification', model='laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft')\n<<<api_provider>>>: Hugging Face\n<<<explanation>>>: 1. Import the pipeline function from the transformers library provided by Hugging Face.\n2. Use the pipeline function to create an image classification model.\n3. Specify the model 'laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft' to be loaded. This model is designed for zero-shot image classification tasks, such as classifying electronic devices.\n4. Feed the classifier the image path and provide class names (e.g., ['smartphone', 'laptop', 'tablet']).\n5. The classifier will predict the most likely class for the input image, which can then be used for organizing product images in inventory.\n\n<<<code>>>: from transformers import pipeline\ndevice_classifier = pipeline('image-classification', model='laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft')\ndevice_class_prediction = device_classifier('path/to/product_image.jpg', ['smartphone', 'laptop', 'tablet'])", 'api_call': "pipeline('image-classification', model='laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft')", 'provider': 'Hugging Face', 'api_data': {'domain': 'Computer Vision Zero-Shot Image Classification', 'framework': 'Hugging Face', 'functionality': 'Zero-Shot Image Classification', 'api_name': 'laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft', 'api_call': "pipeline('image-classification', model='laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft')", 'api_arguments': {'image_path': 'Path to the image file', 'class_names': 'List of comma-separated class names'}, 'python_environment_requirements': ['transformers'], 'example_code': "from transformers import pipeline; classifier = pipeline('image-classification', model='laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft'); classifier('path/to/image.jpg', ['class1', 'class2'])", 'performance': {'dataset': 'ImageNet-1k', 'accuracy': '75.9-76.9%'}, 'description': 'A series of CLIP ConvNeXt-Large models trained on the LAION-2B (english) subset of LAION-5B using OpenCLIP. The models achieve between 75.9 and 76.9 top-1 zero-shot accuracy on ImageNet-1k.'}}

