{'code': "###Instruction: We are trying to transcribe audios. Can you help with giving us an ASR model?\n###Output: <<<domain>>>: Audio Automatic Speech Recognition\n<<<api_call>>>: WhisperForConditionalGeneration.from_pretrained('openai/whisper-base')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>: 1. Firstly, you need to import the necessary libraries from the transformers and datasets packages. This includes WhisperProcessor from transformers and load_dataset from datasets.\n2. Load the pre-trained ASR model with the from_pretrained method for WhisperForConditionalGeneration.\n3. Load an audio dataset with the load_dataset function. In this example, we use the LibriSpeech dataset to get the clean validation set.\n4. To transcribe the audio input, preprocess the audio using the WhisperProcessor.\n5. Pass the input features into model.generate() function to generate the predicted IDs, which represent the transcriptions.\n6. Finally, use the batch_decode method to convert the predicted IDs into the corresponding transcriptions.\n<<<code>>>: from transformers import WhisperProcessor, WhisperForConditionalGeneration\nfrom datasets import load_dataset\nprocessor = WhisperProcessor.from_pretrained('openai/whisper-base')\nmodel = WhisperForConditionalGeneration.from_pretrained('openai/whisper-base')\nds = load_dataset('hf-internal-testing/librispeech_asr_dummy', 'clean', split='validation')\nsample = ds[0]['audio']\ninput_features = processor(sample['array'], sampling_rate=sample['sampling_rate'], return_tensors='pt').input_features\npredicted_ids = model.generate(input_features)\ntranscription = processor.batch_decode(predicted_ids, skip_special_tokens=True)\n", 'api_call': "WhisperForConditionalGeneration.from_pretrained('openai/whisper-base')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Audio Automatic Speech Recognition', 'framework': 'Hugging Face Transformers', 'functionality': 'Automatic Speech Recognition and Speech Translation', 'api_name': 'openai/whisper-base', 'api_call': "WhisperForConditionalGeneration.from_pretrained('openai/whisper-base')", 'api_arguments': {'model_name': 'openai/whisper-base', 'input_features': 'input_features', 'forced_decoder_ids': 'forced_decoder_ids'}, 'python_environment_requirements': ['transformers', 'datasets'], 'example_code': ['from transformers import WhisperProcessor, WhisperForConditionalGeneration', 'from datasets import load_dataset', 'processor = WhisperProcessor.from_pretrained(openai/whisper-base)', 'model = WhisperForConditionalGeneration.from_pretrained(openai/whisper-base)', 'ds = load_dataset(hf-internal-testing/librispeech_asr_dummy, clean, split=validation)', 'sample = ds[0][audio]', 'input_features = processor(sample[array], sampling_rate=sample[sampling_rate], return_tensors=pt).input_features', 'predicted_ids = model.generate(input_features)', 'transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)'], 'performance': {'dataset': 'LibriSpeech (clean) test set', 'accuracy': '5.009 WER'}, 'description': 'Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours of labelled data, Whisper models demonstrate a strong ability to generalize to many datasets and domains without the need for fine-tuning.'}}

