{'code': "###Instruction: I want to convert English speech into different language speech. I have some audio in English language and I would like to convert that into Spanish.\n###Output: <<<domain>>>: Audio Text-to-Speech\n<<<api_call>>>: load_model_ensemble_and_task_from_hf_hub('facebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur')\n<<<api_provider>>>: Fairseq\n<<<explanation>>>: 1. Import the required libraries such as fairseq, hub_utils, huggingface_hub, IPython.display, and torchaudio.\n2. Load the pre-trained model using 'load_model_ensemble_and_task_from_hf_hub' with the given model name 'facebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur' to achieve speech-to-speech translation.\n3. Load your English audio using 'torchaudio.load' with a 16000Hz mono channel setting.\n4. Use the model to convert the English audio into a different speech language, in this case, Spanish, by feeding the audio into the model and obtaining the translation and synthesis.\n5. Display the translated audio using the IPython.display module.\n<<<code>>>: from fairseq import hub_utils, checkpoint_utils\nfrom fairseq.models.speech_to_text.hub_interface import S2THubInterface\nfrom fairseq.models.text_to_speech import CodeHiFiGANVocoder\nfrom fairseq.models.text_to_speech.hub_interface import VocoderHubInterface\nfrom huggingface_hub import snapshot_download\nimport torchaudio\nimport IPython.display as ipd\n\nmodels, cfg, task = checkpoint_utils.load_model_ensemble_and_task_from_hf_hub('facebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur')\nmodel = models[0].cpu()\ncfg['task'].cpu = True\ngenerator = task.build_generator([model], cfg)\n\naudio, _ = torchaudio.load('input_audio_file.flac')\nsample = S2THubInterface.get_model_input(task, audio)\ntranslation_unit = S2THubInterface.get_prediction(task, model, generator, sample)\n\ncache_dir = None\ncache_dir = snapshot_download('facebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur', cache_dir=cache_dir)\nx = hub_utils.from_pretrained(cache_dir, 'model.pt', '.', archive_map=CodeHiFiGANVocoder.hub_models(), config_yaml='config.json', fp16=False, is_vocoder=True)\n\nvocoder = CodeHiFiGANVocoder(x['args']['model_path'][0], x['model_cfg'])\ntts_model = VocoderHubInterface(x['model_cfg'], vocoder)\ntts_sample = tts_model.get_model_input(translation_unit)\nwav, sr = tts_model.get_prediction(tts_sample)\nipd.Audio(wav, rate=sr)\n", 'api_call': "load_model_ensemble_and_task_from_hf_hub('facebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur')", 'provider': 'Fairseq', 'api_data': {'domain': 'Audio Text-to-Speech', 'framework': 'Fairseq', 'functionality': 'Speech-to-speech translation', 'api_name': 'facebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur', 'api_call': "load_model_ensemble_and_task_from_hf_hub('facebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur')", 'api_arguments': {'audio': '16000Hz mono channel audio'}, 'python_environment_requirements': ['fairseq', 'hub_utils', 'huggingface_hub', 'IPython.display', 'torchaudio'], 'example_code': ['import json', 'import os', 'from pathlib import Path', 'import IPython.display as ipd', 'from fairseq import hub_utils', 'from fairseq.checkpoint_utils import load_model_ensemble_and_task_from_hf_hub', 'from fairseq.models.speech_to_text.hub_interface import S2THubInterface', 'from fairseq.models.text_to_speech import CodeHiFiGANVocoder', 'from fairseq.models.text_to_speech.hub_interface import VocoderHubInterface', 'from huggingface_hub import snapshot_download', 'import torchaudio', 'cache_dir = os.getenv(HUGGINGFACE_HUB_CACHE)', 'models, cfg, task = load_model_ensemble_and_task_from_hf_hub(', 'facebook/xm_transformer_s2ut_800m-es-en-st-asr-bt_h1_2022,', 'arg_overrides={config_yaml: config.yaml, task: speech_to_text},', 'cache_dir=cache_dir,', ')', 'model = models[0].cpu()', 'cfg[task].cpu = True', 'generator = task.build_generator([model], cfg)', '# requires 16000Hz mono channel audio', 'audio, _ = torchaudio.load(/Users/lpw/git/api-inference-community/docker_images/fairseq/tests/samples/sample2.flac)', 'sample = S2THubInterface.get_model_input(task, audio)', 'unit = S2THubInterface.get_prediction(task, model, generator, sample)', 'library_name = fairseq', 'cache_dir = (', ' cache_dir or (Path.home() / .cache / library_name).as_posix()', ')', 'cache_dir = snapshot_download(', ' ffacebook/unit_hifigan_mhubert_vp_en_es_fr_it3_400k_layer11_km1000_lj_dur, cache_dir=cache_dir, library_name=library_name', ')', 'x = hub_utils.from_pretrained(', ' cache_dir,', ' model.pt,', ' .,', ' archive_map=CodeHiFiGANVocoder.hub_models(),', ' config_yaml=config.json,', ' fp16=False,', ' is_vocoder=True,', ')', "with open(f{x['args']['data']}/config.json) as f:", ' vocoder_cfg = json.load(f)', 'assert (', ' len(x[args][model_path]) == 1', '), Too many vocoder models in the input', 'vocoder = CodeHiFiGANVocoder(x[args][model_path][0], vocoder_cfg)', 'tts_model = VocoderHubInterface(vocoder_cfg, vocoder)', 'tts_sample = tts_model.get_model_input(unit)', 'wav, sr = tts_model.get_prediction(tts_sample)', 'ipd.Audio(wav, rate=sr)'], 'performance': {'dataset': 'covost2', 'accuracy': None}, 'description': 'Speech-to-speech translation model from fairseq S2UT (paper/code) for Spanish-English. Trained on mTEDx, CoVoST 2, Europarl-ST, and VoxPopuli.'}}

