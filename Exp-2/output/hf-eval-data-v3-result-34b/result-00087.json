{"path": "output/hf-eval-data-v3-valid/f00372_generate_human_face.py", "content": "# function_import --------------------\n\nfrom diffusers import DiffusionPipeline\nimport os\n\n# function_code --------------------\n\ndef generate_human_face(model_id: str = 'google/ncsnpp-ffhq-256') -> None:\n    \"\"\"\n    Generate a synthetic human face image using a pre-trained model.\n\n    Args:\n        model_id (str): The identifier of the pre-trained model. Default is 'google/ncsnpp-ffhq-256'.\n\n    Returns:\n        None. The function saves the generated image to a file named 'sde_ve_generated_image.png'.\n    \"\"\"\n    sde_ve = DiffusionPipeline.from_pretrained(model_id)\n    image = sde_ve().images[0]\n    image.save('sde_ve_generated_image.png')\n\n# test_function_code --------------------\n\ndef test_generate_human_face():\n    \"\"\"\n    Test the function generate_human_face.\n    \"\"\"\n    generate_human_face()\n    assert os.path.exists('sde_ve_generated_image.png'), 'Image not generated.'\n    os.remove('sde_ve_generated_image.png')\n    return 'All Tests Passed'\n\n# call_test_function_code --------------------\n\ntest_generate_human_face()", "function_import": "# function_import --------------------\n\nfrom diffusers import DiffusionPipeline\nimport os\n\n", "function_code": "# function_code --------------------\n\ndef generate_human_face(model_id: str = 'google/ncsnpp-ffhq-256') -> None:\n    \"\"\"\n    Generate a synthetic human face image using a pre-trained model.\n\n    Args:\n        model_id (str): The identifier of the pre-trained model. Default is 'google/ncsnpp-ffhq-256'.\n\n    Returns:\n        None. The function saves the generated image to a file named 'sde_ve_generated_image.png'.\n    \"\"\"\n    sde_ve = DiffusionPipeline.from_pretrained(model_id)\n    image = sde_ve().images[0]\n    image.save('sde_ve_generated_image.png')\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_generate_human_face():\n    \"\"\"\n    Test the function generate_human_face.\n    \"\"\"\n    generate_human_face()\n    assert os.path.exists('sde_ve_generated_image.png'), 'Image not generated.'\n    os.remove('sde_ve_generated_image.png')\n    return 'All Tests Passed'\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_generate_human_face()", "instruct": "# function_import --------------------\n\nfrom diffusers import DiffusionPipeline\nimport os\n\n# function_code --------------------\n\ndef generate_human_face(model_id: str = 'google/ncsnpp-ffhq-256') -> None:\n    \"\"\"\n    Generate a synthetic human face image using a pre-trained model.\n\n    Args:\n        model_id (str): The identifier of the pre-trained model. Default is 'google/ncsnpp-ffhq-256'.\n\n    Returns:\n        None. The function saves the generated image to a file named 'sde_ve_generated_image.png'.\n    \"\"\"", "answer": "\n    sde_ve = DiffusionPipeline.from_pretrained(model_id)\n    image = sde_ve().images[0]\n    image.save('sde_ve_generated_image.png')\n\n", "prediction": "\n    \n    # load the pre-trained model\n    diffusion = DiffusionPipeline(model_id=model_id)\n\n    # run the model and save it as an image\n    x = diffusion.p_sample_loop()\n    img = diffusion._to_image(x[0])\n    img.save('sde_ve_generated_image.png')\n    "}