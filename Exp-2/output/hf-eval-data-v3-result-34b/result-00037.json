{"path": "output/hf-eval-data-v3-valid/f00166_predict_housing_prices.py", "content": "# function_import --------------------\n\nimport joblib\nimport pandas as pd\nimport json\n\n# function_code --------------------\n\ndef predict_housing_prices(model_path: str, data_path: str, config_path: str) -> pd.DataFrame:\n    \"\"\"\n    Predicts housing prices based on the given model and data.\n\n    Args:\n        model_path (str): The path to the trained model.\n        data_path (str): The path to the data file.\n        config_path (str): The path to the configuration file.\n\n    Returns:\n        pd.DataFrame: The predicted housing prices.\n\n    Raises:\n        FileNotFoundError: If the model, data, or configuration file does not exist.\n    \"\"\"\n    model = joblib.load(model_path)\n    data = pd.read_csv(data_path)\n    config = json.load(open(config_path))\n    features = config['features']\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n# test_function_code --------------------\n\ndef test_predict_housing_prices():\n    \"\"\"Tests the predict_housing_prices function.\"\"\"\n    try:\n        predictions = predict_housing_prices('model.joblib', 'data.csv', 'config.json')\n        assert isinstance(predictions, pd.DataFrame), 'The result is not a DataFrame.'\n        assert not predictions.empty, 'The DataFrame is empty.'\n    except FileNotFoundError:\n        print('The model, data, or configuration file does not exist.')\n    except Exception as e:\n        print(f'An error occurred: {e}')\n    else:\n        print('All tests passed.')\n\n# call_test_function_code --------------------\n\ntest_predict_housing_prices()", "function_import": "# function_import --------------------\n\nimport joblib\nimport pandas as pd\nimport json\n\n", "function_code": "# function_code --------------------\n\ndef predict_housing_prices(model_path: str, data_path: str, config_path: str) -> pd.DataFrame:\n    \"\"\"\n    Predicts housing prices based on the given model and data.\n\n    Args:\n        model_path (str): The path to the trained model.\n        data_path (str): The path to the data file.\n        config_path (str): The path to the configuration file.\n\n    Returns:\n        pd.DataFrame: The predicted housing prices.\n\n    Raises:\n        FileNotFoundError: If the model, data, or configuration file does not exist.\n    \"\"\"\n    model = joblib.load(model_path)\n    data = pd.read_csv(data_path)\n    config = json.load(open(config_path))\n    features = config['features']\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_predict_housing_prices():\n    \"\"\"Tests the predict_housing_prices function.\"\"\"\n    try:\n        predictions = predict_housing_prices('model.joblib', 'data.csv', 'config.json')\n        assert isinstance(predictions, pd.DataFrame), 'The result is not a DataFrame.'\n        assert not predictions.empty, 'The DataFrame is empty.'\n    except FileNotFoundError:\n        print('The model, data, or configuration file does not exist.')\n    except Exception as e:\n        print(f'An error occurred: {e}')\n    else:\n        print('All tests passed.')\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_predict_housing_prices()", "instruct": "# function_import --------------------\n\nimport joblib\nimport pandas as pd\nimport json\n\n# function_code --------------------\n\ndef predict_housing_prices(model_path: str, data_path: str, config_path: str) -> pd.DataFrame:\n    \"\"\"\n    Predicts housing prices based on the given model and data.\n\n    Args:\n        model_path (str): The path to the trained model.\n        data_path (str): The path to the data file.\n        config_path (str): The path to the configuration file.\n\n    Returns:\n        pd.DataFrame: The predicted housing prices.\n\n    Raises:\n        FileNotFoundError: If the model, data, or configuration file does not exist.\n    \"\"\"", "answer": "\n    model = joblib.load(model_path)\n    data = pd.read_csv(data_path)\n    config = json.load(open(config_path))\n    features = config['features']\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n", "prediction": "\n    try:\n        # load the model and the data\n        trained_model = joblib.load(model_path)\n        test_data = pd.read_csv(data_path)\n        \n        # load the configuration file\n        with open(config_path, 'r') as config_file:\n            config = json.loads(config_file.read())['target']\n        \n        # make predictions\n        y_pred = trained_model.predict(test_data)\n        y_pred = pd.DataFrame({config: y_pred})\n    except FileNotFoundError as fnf_error:\n        raise fnf_error\n    \n    return y_pred\n"}