{"path": "output/hf-eval-data-v3-valid/f00541_predict_survival.py", "content": "# function_import --------------------\n\nimport joblib\nimport pandas as pd\nimport json\n\n# function_code --------------------\n\ndef predict_survival(data_file: str, model_file: str = 'model.joblib', config_file: str = 'config.json') -> pd.DataFrame:\n    \"\"\"\n    Predict the survival of passengers on the Titanic based on certain demographics like age, gender, etc.\n\n    Args:\n        data_file (str): Path to the CSV file containing the data.\n        model_file (str, optional): Path to the trained model file. Defaults to 'model.joblib'.\n        config_file (str, optional): Path to the configuration file. Defaults to 'config.json'.\n\n    Returns:\n        pd.DataFrame: DataFrame containing the survival probabilities for each passenger.\n\n    Raises:\n        FileNotFoundError: If the model or configuration file does not exist.\n    \"\"\"\n    model = joblib.load(model_file)\n    config = json.load(open(config_file))\n    features = config['features']\n    data = pd.read_csv(data_file)\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n# test_function_code --------------------\n\ndef test_predict_survival():\n    \"\"\"Tests the predict_survival function.\"\"\"\n    try:\n        predictions = predict_survival('test_data.csv')\n        assert isinstance(predictions, pd.DataFrame), 'The result is not a DataFrame.'\n        assert not predictions.empty, 'The DataFrame is empty.'\n    except FileNotFoundError:\n        print('Model or configuration file not found.')\n    else:\n        print('All Tests Passed')\n\n# call_test_function_code --------------------\n\ntest_predict_survival()", "function_import": "# function_import --------------------\n\nimport joblib\nimport pandas as pd\nimport json\n\n", "function_code": "# function_code --------------------\n\ndef predict_survival(data_file: str, model_file: str = 'model.joblib', config_file: str = 'config.json') -> pd.DataFrame:\n    \"\"\"\n    Predict the survival of passengers on the Titanic based on certain demographics like age, gender, etc.\n\n    Args:\n        data_file (str): Path to the CSV file containing the data.\n        model_file (str, optional): Path to the trained model file. Defaults to 'model.joblib'.\n        config_file (str, optional): Path to the configuration file. Defaults to 'config.json'.\n\n    Returns:\n        pd.DataFrame: DataFrame containing the survival probabilities for each passenger.\n\n    Raises:\n        FileNotFoundError: If the model or configuration file does not exist.\n    \"\"\"\n    model = joblib.load(model_file)\n    config = json.load(open(config_file))\n    features = config['features']\n    data = pd.read_csv(data_file)\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_predict_survival():\n    \"\"\"Tests the predict_survival function.\"\"\"\n    try:\n        predictions = predict_survival('test_data.csv')\n        assert isinstance(predictions, pd.DataFrame), 'The result is not a DataFrame.'\n        assert not predictions.empty, 'The DataFrame is empty.'\n    except FileNotFoundError:\n        print('Model or configuration file not found.')\n    else:\n        print('All Tests Passed')\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_predict_survival()", "instruct": "# function_import --------------------\n\nimport joblib\nimport pandas as pd\nimport json\n\n# function_code --------------------\n\ndef predict_survival(data_file: str, model_file: str = 'model.joblib', config_file: str = 'config.json') -> pd.DataFrame:\n    \"\"\"\n    Predict the survival of passengers on the Titanic based on certain demographics like age, gender, etc.\n\n    Args:\n        data_file (str): Path to the CSV file containing the data.\n        model_file (str, optional): Path to the trained model file. Defaults to 'model.joblib'.\n        config_file (str, optional): Path to the configuration file. Defaults to 'config.json'.\n\n    Returns:\n        pd.DataFrame: DataFrame containing the survival probabilities for each passenger.\n\n    Raises:\n        FileNotFoundError: If the model or configuration file does not exist.\n    \"\"\"", "answer": "\n    model = joblib.load(model_file)\n    config = json.load(open(config_file))\n    features = config['features']\n    data = pd.read_csv(data_file)\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n", "prediction": "    \n\n    # Load the trained model and configuration files\n    try:\n        with open(config_file, 'r') as f:\n            config = json.load(f)['data']\n    except Exception:\n        raise FileNotFoundError('Config file was not found or invalid JSON') \n    \n    # Load the data file\n    df = pd.read_csv(data_file)\n    df = df[config['features'] + [config['targets']]]\n    \n    # Preprocess the data\n    X, y = df.drop('survived', axis=1), df['survived']\n    \n    try:\n        model = joblib.load(model_file)\n    except Exception as e:\n        raise FileNotFoundError(f'Model file was not found or in invalid format: {e}') \n        \n    # Make predictions using the trained model and return them\n    return pd.DataFrame({config['targets'] + '_pred': model.predict_proba(X)[:,1]})"}