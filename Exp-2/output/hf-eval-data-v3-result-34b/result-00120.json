{"path": "output/hf-eval-data-v3-valid/f00500_translate_french_to_english.py", "content": "# function_import --------------------\n\nfrom transformers import pipeline\n\n# function_code --------------------\n\ndef translate_french_to_english(text):\n    \"\"\"\n    Translate a French text into English using the Helsinki-NLP/opus-mt-fr-en model.\n\n    Args:\n        text (str): The French text to be translated.\n\n    Returns:\n        str: The translated English text.\n\n    Raises:\n        ValueError: If the input is not a string.\n    \"\"\"\n    if not isinstance(text, str):\n        raise ValueError('Input text must be a string')\n    translator = pipeline('translation_fr_to_en', model='Helsinki-NLP/opus-mt-fr-en')\n    translated_text = translator(text)[0]['translation_text']\n    return translated_text\n\n# test_function_code --------------------\n\ndef test_translate_french_to_english():\n    assert isinstance(translate_french_to_english('Bonjour'), str)\n    assert 'Hello' in translate_french_to_english('Bonjour')\n    assert 'Welcome' in translate_french_to_english('Bienvenue')\n    try:\n        translate_french_to_english(123)\n    except ValueError:\n        pass\n    else:\n        raise AssertionError('ValueError exception not raised for non-string input')\n    return 'All Tests Passed'\n\n# call_test_function_code --------------------\n\ntest_translate_french_to_english()", "function_import": "# function_import --------------------\n\nfrom transformers import pipeline\n\n", "function_code": "# function_code --------------------\n\ndef translate_french_to_english(text):\n    \"\"\"\n    Translate a French text into English using the Helsinki-NLP/opus-mt-fr-en model.\n\n    Args:\n        text (str): The French text to be translated.\n\n    Returns:\n        str: The translated English text.\n\n    Raises:\n        ValueError: If the input is not a string.\n    \"\"\"\n    if not isinstance(text, str):\n        raise ValueError('Input text must be a string')\n    translator = pipeline('translation_fr_to_en', model='Helsinki-NLP/opus-mt-fr-en')\n    translated_text = translator(text)[0]['translation_text']\n    return translated_text\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_translate_french_to_english():\n    assert isinstance(translate_french_to_english('Bonjour'), str)\n    assert 'Hello' in translate_french_to_english('Bonjour')\n    assert 'Welcome' in translate_french_to_english('Bienvenue')\n    try:\n        translate_french_to_english(123)\n    except ValueError:\n        pass\n    else:\n        raise AssertionError('ValueError exception not raised for non-string input')\n    return 'All Tests Passed'\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_translate_french_to_english()", "instruct": "# function_import --------------------\n\nfrom transformers import pipeline\n\n# function_code --------------------\n\ndef translate_french_to_english(text):\n    \"\"\"\n    Translate a French text into English using the Helsinki-NLP/opus-mt-fr-en model.\n\n    Args:\n        text (str): The French text to be translated.\n\n    Returns:\n        str: The translated English text.\n\n    Raises:\n        ValueError: If the input is not a string.\n    \"\"\"", "answer": "\n    if not isinstance(text, str):\n        raise ValueError('Input text must be a string')\n    translator = pipeline('translation_fr_to_en', model='Helsinki-NLP/opus-mt-fr-en')\n    translated_text = translator(text)[0]['translation_text']\n    return translated_text\n\n", "prediction": "\n    if type(text) is not str:\n        raise ValueError(\"Input is not a string.\")\n\n    # Initialize the pipeline with the translation model\n    french_to_english = pipeline('translation_fr-en')\n\n    # Translate the text\n    return french_to_english(text)[0]['translation_text']"}