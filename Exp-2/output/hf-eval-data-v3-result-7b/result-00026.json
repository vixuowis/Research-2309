{"path": "output/hf-eval-data-v3-valid/f00128_extract_entities_from_email.py", "content": "# function_import --------------------\n\nfrom flair.data import Sentence\nfrom flair.models import SequenceTagger\n\n# function_code --------------------\n\ndef extract_entities_from_email(customer_email_text):\n    \"\"\"\n    Extract entities from customer email text using Flair's NER model.\n\n    Args:\n        customer_email_text (str): The text of the customer email.\n\n    Returns:\n        list: A list of recognized entities in the email text.\n    \"\"\"\n    tagger = SequenceTagger.load('flair/ner-english-ontonotes')\n    sentence = Sentence(customer_email_text)\n    tagger.predict(sentence)\n    entities = [str(entity) for entity in sentence.get_spans('ner')]\n    return entities\n\n# test_function_code --------------------\n\ndef test_extract_entities_from_email():\n    \"\"\"\n    Test the function extract_entities_from_email.\n    \"\"\"\n    email1 = 'On September 1st George Washington won 1 dollar.'\n    email2 = 'The meeting will be held at the Google headquarters on 25th December.'\n    email3 = 'I bought an iPhone for $699.'\n    assert len(extract_entities_from_email(email1)) > 0\n    assert len(extract_entities_from_email(email2)) > 0\n    assert len(extract_entities_from_email(email3)) > 0\n    print('All Tests Passed')\n\n# call_test_function_code --------------------\n\ntest_extract_entities_from_email()", "function_import": "# function_import --------------------\n\nfrom flair.data import Sentence\nfrom flair.models import SequenceTagger\n\n", "function_code": "# function_code --------------------\n\ndef extract_entities_from_email(customer_email_text):\n    \"\"\"\n    Extract entities from customer email text using Flair's NER model.\n\n    Args:\n        customer_email_text (str): The text of the customer email.\n\n    Returns:\n        list: A list of recognized entities in the email text.\n    \"\"\"\n    tagger = SequenceTagger.load('flair/ner-english-ontonotes')\n    sentence = Sentence(customer_email_text)\n    tagger.predict(sentence)\n    entities = [str(entity) for entity in sentence.get_spans('ner')]\n    return entities\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_extract_entities_from_email():\n    \"\"\"\n    Test the function extract_entities_from_email.\n    \"\"\"\n    email1 = 'On September 1st George Washington won 1 dollar.'\n    email2 = 'The meeting will be held at the Google headquarters on 25th December.'\n    email3 = 'I bought an iPhone for $699.'\n    assert len(extract_entities_from_email(email1)) > 0\n    assert len(extract_entities_from_email(email2)) > 0\n    assert len(extract_entities_from_email(email3)) > 0\n    print('All Tests Passed')\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_extract_entities_from_email()", "instruct": "# function_import --------------------\n\nfrom flair.data import Sentence\nfrom flair.models import SequenceTagger\n\n# function_code --------------------\n\ndef extract_entities_from_email(customer_email_text):\n    \"\"\"\n    Extract entities from customer email text using Flair's NER model.\n\n    Args:\n        customer_email_text (str): The text of the customer email.\n\n    Returns:\n        list: A list of recognized entities in the email text.\n    \"\"\"", "answer": "\n    tagger = SequenceTagger.load('flair/ner-english-ontonotes')\n    sentence = Sentence(customer_email_text)\n    tagger.predict(sentence)\n    entities = [str(entity) for entity in sentence.get_spans('ner')]\n    return entities\n\n", "prediction": "\n    flair_sentence = Sentence(customer_email_text)\n    \n    flair_ner_model = SequenceTagger.load('ner')  # Load Flair NER model\n    flair_ner_model.predict(flair_sentence)        # Predict entities on customer email text\n    \n    return [entity.text for entity in flair_sentence.get_spans('ner')]"}