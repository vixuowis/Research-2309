2023-11-12 08:25:57.412051: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-12 08:25:57.454272: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-12 08:25:58.115616: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
Downloading model.safetensors:   0%|                                                                                | 0.00/445M [00:00<?, ?B/s]Downloading model.safetensors:   2%|█▋                                                                     | 10.5M/445M [00:01<01:10, 6.12MB/s]Downloading model.safetensors:   5%|███▎                                                                   | 21.0M/445M [00:02<00:41, 10.1MB/s]Downloading model.safetensors:   7%|█████                                                                  | 31.5M/445M [00:02<00:33, 12.3MB/s]Downloading model.safetensors:   9%|██████▋                                                                | 41.9M/445M [00:03<00:28, 14.2MB/s]Downloading model.safetensors:  12%|████████▎                                                              | 52.4M/445M [00:04<00:26, 14.9MB/s]Downloading model.safetensors:  14%|██████████                                                             | 62.9M/445M [00:04<00:23, 16.0MB/s]Downloading model.safetensors:  16%|███████████▋                                                           | 73.4M/445M [00:05<00:22, 16.5MB/s]Downloading model.safetensors:  19%|█████████████▍                                                         | 83.9M/445M [00:05<00:21, 16.7MB/s]Downloading model.safetensors:  21%|███████████████                                                        | 94.4M/445M [00:06<00:20, 17.2MB/s]Downloading model.safetensors:  24%|████████████████▉                                                       | 105M/445M [00:07<00:19, 17.1MB/s]Downloading model.safetensors:  26%|██████████████████▋                                                     | 115M/445M [00:07<00:19, 17.1MB/s]Downloading model.safetensors:  28%|████████████████████▎                                                   | 126M/445M [00:08<00:18, 17.5MB/s]Downloading model.safetensors:  31%|██████████████████████                                                  | 136M/445M [00:08<00:17, 17.3MB/s]Downloading model.safetensors:  33%|███████████████████████▊                                                | 147M/445M [00:09<00:16, 17.6MB/s]Downloading model.safetensors:  35%|█████████████████████████▍                                              | 157M/445M [00:10<00:16, 17.3MB/s]Downloading model.safetensors:  38%|███████████████████████████▏                                            | 168M/445M [00:10<00:15, 17.5MB/s]Downloading model.safetensors:  40%|████████████████████████████▊                                           | 178M/445M [00:11<00:15, 17.6MB/s]Downloading model.safetensors:  42%|██████████████████████████████▌                                         | 189M/445M [00:11<00:14, 17.7MB/s]Downloading model.safetensors:  45%|████████████████████████████████▏                                       | 199M/445M [00:12<00:13, 17.7MB/s]Downloading model.safetensors:  47%|█████████████████████████████████▉                                      | 210M/445M [00:13<00:13, 17.4MB/s]Downloading model.safetensors:  49%|███████████████████████████████████▋                                    | 220M/445M [00:13<00:13, 17.0MB/s]Downloading model.safetensors:  52%|█████████████████████████████████████▎                                  | 231M/445M [00:14<00:12, 17.3MB/s]Downloading model.safetensors:  54%|███████████████████████████████████████                                 | 241M/445M [00:14<00:11, 17.4MB/s]Downloading model.safetensors:  57%|████████████████████████████████████████▋                               | 252M/445M [00:15<00:11, 16.9MB/s]Downloading model.safetensors:  59%|██████████████████████████████████████████▍                             | 262M/445M [00:16<00:10, 17.2MB/s]Downloading model.safetensors:  61%|████████████████████████████████████████████                            | 273M/445M [00:16<00:10, 17.1MB/s]Downloading model.safetensors:  64%|█████████████████████████████████████████████▊                          | 283M/445M [00:17<00:09, 17.5MB/s]Downloading model.safetensors:  66%|███████████████████████████████████████████████▌                        | 294M/445M [00:17<00:09, 16.8MB/s]Downloading model.safetensors:  68%|█████████████████████████████████████████████████▏                      | 304M/445M [00:18<00:08, 16.5MB/s]Downloading model.safetensors:  71%|██████████████████████████████████████████████████▉                     | 315M/445M [00:19<00:07, 16.6MB/s]Downloading model.safetensors:  73%|████████████████████████████████████████████████████▌                   | 325M/445M [00:19<00:07, 16.5MB/s]Downloading model.safetensors:  75%|██████████████████████████████████████████████████████▎                 | 336M/445M [00:20<00:06, 16.6MB/s]Downloading model.safetensors:  78%|███████████████████████████████████████████████████████▉                | 346M/445M [00:21<00:06, 16.4MB/s]Downloading model.safetensors:  80%|█████████████████████████████████████████████████████████▋              | 357M/445M [00:22<00:05, 15.2MB/s]Downloading model.safetensors:  82%|███████████████████████████████████████████████████████████▍            | 367M/445M [00:22<00:05, 15.4MB/s]Downloading model.safetensors:  85%|█████████████████████████████████████████████████████████████           | 377M/445M [00:23<00:04, 14.8MB/s]Downloading model.safetensors:  87%|██████████████████████████████████████████████████████████████▊         | 388M/445M [00:24<00:03, 15.0MB/s]Downloading model.safetensors:  90%|████████████████████████████████████████████████████████████████▍       | 398M/445M [00:24<00:03, 15.5MB/s]Downloading model.safetensors:  92%|██████████████████████████████████████████████████████████████████▏     | 409M/445M [00:25<00:02, 15.6MB/s]Downloading model.safetensors:  94%|███████████████████████████████████████████████████████████████████▊    | 419M/445M [00:26<00:01, 15.8MB/s]Downloading model.safetensors:  97%|█████████████████████████████████████████████████████████████████████▌  | 430M/445M [00:26<00:01, 14.9MB/s]Downloading model.safetensors:  99%|███████████████████████████████████████████████████████████████████████▎| 440M/445M [00:28<00:00, 12.3MB/s]Downloading model.safetensors: 100%|████████████████████████████████████████████████████████████████████████| 445M/445M [00:28<00:00, 12.7MB/s]Downloading model.safetensors: 100%|████████████████████████████████████████████████████████████████████████| 445M/445M [00:28<00:00, 15.7MB/s]
Some weights of the model checkpoint at camembert-base were not used when initializing CamembertForMaskedLM: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
- This IS expected if you are initializing CamembertForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CamembertForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Downloading (…)tencepiece.bpe.model:   0%|                                                                          | 0.00/811k [00:00<?, ?B/s]Downloading (…)tencepiece.bpe.model: 100%|██████████████████████████████████████████████████████████████████| 811k/811k [00:00<00:00, 1.00MB/s]Downloading (…)tencepiece.bpe.model: 100%|██████████████████████████████████████████████████████████████████| 811k/811k [00:00<00:00, 1.00MB/s]
Downloading (…)/main/tokenizer.json:   0%|                                                                         | 0.00/1.40M [00:00<?, ?B/s]Downloading (…)/main/tokenizer.json: 100%|████████████████████████████████████████████████████████████████| 1.40M/1.40M [00:00<00:00, 3.58MB/s]Downloading (…)/main/tokenizer.json: 100%|████████████████████████████████████████████████████████████████| 1.40M/1.40M [00:00<00:00, 3.56MB/s]
Some weights of the model checkpoint at camembert-base were not used when initializing CamembertForMaskedLM: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
- This IS expected if you are initializing CamembertForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CamembertForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of the model checkpoint at camembert-base were not used when initializing CamembertForMaskedLM: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
- This IS expected if you are initializing CamembertForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CamembertForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Traceback (most recent call last):
  File "./f00698_fill_mask_french.py", line 34, in <module>
    print(test_fill_mask_french())
  File "./f00698_fill_mask_french.py", line 29, in test_fill_mask_french
    assert fill_mask_french('La Tour Eiffel est <mask>.')[0]['sequence'] == 'La Tour Eiffel est magnifique.', 'Test Case 3 Failed'
AssertionError: Test Case 3 Failed
