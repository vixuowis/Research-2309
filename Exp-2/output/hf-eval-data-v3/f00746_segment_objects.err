2023-11-12 08:57:08.488008: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-12 08:57:08.530361: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-12 08:57:09.142872: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
Downloading (…)rocessor_config.json:   0%|                                                                           | 0.00/273 [00:00<?, ?B/s]Downloading (…)rocessor_config.json: 100%|████████████████████████████████████████████████████████████████████| 273/273 [00:00<00:00, 26.9kB/s]
/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/models/detr/feature_extraction_detr.py:28: FutureWarning: The class DetrFeatureExtractor is deprecated and will be removed in version 5 of Transformers. Please use DetrImageProcessor instead.
  warnings.warn(
The `max_size` parameter is deprecated and will be removed in v4.26. Please specify in `size['longest_edge'] instead`.
Downloading (…)lve/main/config.json:   0%|                                                                         | 0.00/11.6k [00:00<?, ?B/s]Downloading (…)lve/main/config.json: 100%|█████████████████████████████████████████████████████████████████| 11.6k/11.6k [00:00<00:00, 975kB/s]
Downloading pytorch_model.bin:   0%|                                                                                | 0.00/172M [00:00<?, ?B/s]Downloading pytorch_model.bin:   6%|████▎                                                                  | 10.5M/172M [00:01<00:24, 6.62MB/s]Downloading pytorch_model.bin:  12%|████████▋                                                              | 21.0M/172M [00:02<00:13, 10.8MB/s]Downloading pytorch_model.bin:  18%|████████████▉                                                          | 31.5M/172M [00:02<00:10, 13.2MB/s]Downloading pytorch_model.bin:  24%|█████████████████▎                                                     | 41.9M/172M [00:03<00:08, 14.9MB/s]Downloading pytorch_model.bin:  30%|█████████████████████▌                                                 | 52.4M/172M [00:03<00:07, 15.6MB/s]Downloading pytorch_model.bin:  37%|█████████████████████████▉                                             | 62.9M/172M [00:04<00:06, 16.7MB/s]Downloading pytorch_model.bin:  43%|██████████████████████████████▎                                        | 73.4M/172M [00:05<00:05, 16.8MB/s]Downloading pytorch_model.bin:  49%|██████████████████████████████████▌                                    | 83.9M/172M [00:05<00:05, 17.6MB/s]Downloading pytorch_model.bin:  55%|██████████████████████████████████████▉                                | 94.4M/172M [00:06<00:04, 17.3MB/s]Downloading pytorch_model.bin:  61%|███████████████████████████████████████████▊                            | 105M/172M [00:06<00:03, 17.6MB/s]Downloading pytorch_model.bin:  67%|████████████████████████████████████████████████▏                       | 115M/172M [00:07<00:03, 17.8MB/s]Downloading pytorch_model.bin:  73%|████████████████████████████████████████████████████▌                   | 126M/172M [00:07<00:02, 18.0MB/s]Downloading pytorch_model.bin:  79%|████████████████████████████████████████████████████████▉               | 136M/172M [00:08<00:02, 17.6MB/s]Downloading pytorch_model.bin:  85%|█████████████████████████████████████████████████████████████▎          | 147M/172M [00:09<00:01, 18.0MB/s]Downloading pytorch_model.bin:  91%|█████████████████████████████████████████████████████████████████▋      | 157M/172M [00:09<00:00, 18.1MB/s]Downloading pytorch_model.bin:  97%|██████████████████████████████████████████████████████████████████████▏ | 168M/172M [00:10<00:00, 17.8MB/s]Downloading pytorch_model.bin: 100%|████████████████████████████████████████████████████████████████████████| 172M/172M [00:10<00:00, 17.7MB/s]Downloading pytorch_model.bin: 100%|████████████████████████████████████████████████████████████████████████| 172M/172M [00:10<00:00, 16.3MB/s]
Some weights of the model checkpoint at facebook/detr-resnet-50-panoptic were not used when initializing DetrForSegmentation: ['detr.model.backbone.conv_encoder.model.layer2.0.downsample.1.num_batches_tracked', 'detr.model.backbone.conv_encoder.model.layer3.0.downsample.1.num_batches_tracked', 'detr.model.backbone.conv_encoder.model.layer1.0.downsample.1.num_batches_tracked', 'detr.model.backbone.conv_encoder.model.layer4.0.downsample.1.num_batches_tracked']
- This IS expected if you are initializing DetrForSegmentation from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing DetrForSegmentation from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
`post_process_panoptic is deprecated and will be removed in v5 of Transformers, please use `post_process_panoptic_segmentation`.
