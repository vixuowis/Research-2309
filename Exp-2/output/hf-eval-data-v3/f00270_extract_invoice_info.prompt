{'code': "###Instruction: Our company deals with insurance claims. We need a smart assistant who can retrieve information from documents, especially invoices, such as total amount, date of invoice, and name of the service provider.\n\n###Output: <<<domain>>>: Multimodal Document Question Answer\n<<<api_call>>>: pipeline('document-question-answering', model='jinhybr/OCR-DocVQA-Donut')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>: 1. We import the pipeline function from the transformers library provided by Hugging Face.\n2. The pipeline function is used to create a document-question-answering model, which is capable of extracting relevant information from documents, in this case invoices.\n3. We specify the model 'jinhybr/OCR-DocVQA-Donut' to be loaded. This is a fine-tuned model on the DocVQA dataset, designed specifically for question-answering tasks and document comprehension.\n4. The created OCR DocVQA model can be used to extract information like total amount, date of invoice, and name of the service provider from given documents.\n<<<code>>>: from transformers import pipeline\ndoc_vqa = pipeline('document-question-answering', model='jinhybr/OCR-DocVQA-Donut')\nimage_path = 'path/to/invoice_image.jpg'\nquestions = ['What is the total amount?', 'What is the date of the invoice?', 'What is the name of the service provider?']\nanswers = [doc_vqa(image_path=image_path, question=q) for q in questions]", 'api_call': "pipeline('document-question-answering', model='jinhybr/OCR-DocVQA-Donut')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Multimodal Document Question Answer', 'framework': 'Hugging Face Transformers', 'functionality': 'vision-encoder-decoder', 'api_name': 'jinhybr/OCR-DocVQA-Donut', 'api_call': "pipeline('document-question-answering', model='jinhybr/OCR-DocVQA-Donut')", 'api_arguments': 'image_path, question', 'python_environment_requirements': 'transformers', 'example_code': "doc_vqa(image_path='path/to/image.jpg', question='What is the title?')", 'performance': {'dataset': 'DocVQA', 'accuracy': 'Not provided'}, 'description': 'Donut model fine-tuned on DocVQA. It consists of a vision encoder (Swin Transformer) and a text decoder (BART). Given an image, the encoder first encodes the image into a tensor of embeddings, after which the decoder autoregressively generates text, conditioned on the encoding of the encoder.'}}

