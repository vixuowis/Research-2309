{'code': '###Instruction: In our language app, we want to include text to speech functionality for Hokkien, a dialect of Chinese, using the TAT-TTS dataset.\n###Output: <<<domain>>>: Audio Text-to-Speech\n<<<api_call>>>: load_model_ensemble_and_task_from_hf_hub(\'facebook/unit_hifigan_HK_layer12.km2500_frame_TAT-TTS\')\n<<<api_provider>>>: Fairseq\n<<<explanation>>>:1. Import the necessary libraries such as fairseq, huggingface_hub, and torchaudio.\n2. Use the load_model_ensemble_and_task_from_hf_hub function to load the pre-trained text-to-speech model \'facebook/unit_hifigan_HK_layer12.km2500_frame_TAT-TTS\', which is trained on the TAT-TTS dataset. This dataset contains 4 speakers in a Taiwanese Hokkien accent.\n3. Use the VocoderHubInterface to initiate the pre-trained model with the CodeHiFiGANVocoder. This vocoder performs high-fidelity speech synthesis.\n4. Convert the input text, which should be in Hokkien dialect, into the model input format using tts_model.get_model_input(text).\n5. Get the generated speech (wav) and sample rate (sr) from the model\'s prediction using tts_model.get_prediction(tts_sample).\n6. Use the IPython.display module to play the generated audio.\n<<<code>>>: from fairseq import hub_utils\nfrom fairseq.models.text_to_speech import CodeHiFiGANVocoder\nfrom fairseq.models.text_to_speech.hub_interface import VocoderHubInterface\nimport torchaudio\nimport IPython.display as ipd\n\nmodel_path = load_model_ensemble_and_task_from_hf_hub(\'facebook/unit_hifigan_HK_layer12.km2500_frame_TAT-TTS\')\nvocoder_cfg = model_path[\'args\']\nvocoder = CodeHiFiGANVocoder(model_path[\'args\'][\'model_path\'][0], vocoder_cfg)\n\ntts_model = VocoderHubInterface(vocoder_cfg, vocoder)\ntext_input = "Insert Hokkien text here"\ntts_sample = tts_model.get_model_input(text_input)\n\nwav, sr = tts_model.get_prediction(tts_sample)\nipd.Audio(wav, rate=sr)', 'api_call': "load_model_ensemble_and_task_from_hf_hub('facebook/unit_hifigan_HK_layer12.km2500_frame_TAT-TT')", 'provider': 'Fairseq', 'api_data': {'domain': 'Audio Text-to-Speech', 'framework': 'Fairseq', 'functionality': 'Text-to-Speech', 'api_name': 'unit_hifigan_HK_layer12.km2500_frame_TAT-TTS', 'api_call': "load_model_ensemble_and_task_from_hf_hub('facebook/unit_hifigan_HK_layer12.km2500_frame_TAT-TT')", 'api_arguments': {'unit': 'Text input for the TTS model'}, 'python_environment_requirements': ['fairseq', 'huggingface_hub', 'torchaudio'], 'example_code': "import json\nimport os\nfrom pathlib import Path\nimport IPython.display as ipd\nfrom fairseq import hub_utils\nfrom fairseq.checkpoint_utils import load_model_ensemble_and_task_from_hf_hub\nfrom fairseq.models.speech_to_text.hub_interface import S2THubInterface\nfrom fairseq.models.text_to_speech import CodeHiFiGANVocoder\nfrom fairseq.models.text_to_speech.hub_interface import VocoderHubInterface\nfrom huggingface_hub import snapshot_download\nimport torchaudio\ncache_dir = os.getenv(HUGGINGFACE_HUB_CACHE)\nlibrary_name = fairseq\ncache_dir = (\n cache_dir or (Path.home() / .cache / library_name).as_posix()\n)\ncache_dir = snapshot_download(\n ffacebook/unit_hifigan_HK_layer12.km2500_frame_TAT-TTS, cache_dir=cache_dir, library_name=library_name\n)\nx = hub_utils.from_pretrained(\n cache_dir,\n model.pt,\n .,\n archive_map=CodeHiFiGANVocoder.hub_models(),\n config_yaml=config.json,\n fp16=False,\n is_vocoder=True,\n)\nwith open(f{x['args']['data']}/config.json) as f:\n vocoder_cfg = json.load(f)\nassert (\n len(x[args][model_path]) == 1\n), Too many vocoder models in the input\nvocoder = CodeHiFiGANVocoder(x[args][model_path][0], vocoder_cfg)\ntts_model = VocoderHubInterface(vocoder_cfg, vocoder)\ntts_sample = tts_model.get_model_input(unit)\nwav, sr = tts_model.get_prediction(tts_sample)\nipd.Audio(wav, rate=sr)", 'performance': {'dataset': 'TAT-TTS', 'accuracy': 'Not provided'}, 'description': 'Hokkien unit HiFiGAN based vocoder from fairseq. Trained with TAT-TTS data with 4 speakers in Taiwanese Hokkien accent.'}}

Traceback (most recent call last):
  File "output/hf-eval-data-v2/f00614_text_to_speech_hokkien.py", line 3, in <module>
    from fairseq import hub_utils
ModuleNotFoundError: No module named 'fairseq'
