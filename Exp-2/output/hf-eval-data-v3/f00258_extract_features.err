Downloading (…)okenizer_config.json:   0%|                                                                          | 0.00/24.0 [00:00<?, ?B/s]Downloading (…)okenizer_config.json: 100%|██████████████████████████████████████████████████████████████████| 24.0/24.0 [00:00<00:00, 2.51kB/s]
Downloading (…)lve/main/config.json:   0%|                                                                           | 0.00/642 [00:00<?, ?B/s]Downloading (…)lve/main/config.json: 100%|████████████████████████████████████████████████████████████████████| 642/642 [00:00<00:00, 95.1kB/s]
Downloading (…)solve/main/vocab.txt:   0%|                                                                         | 0.00/1.65M [00:00<?, ?B/s]Downloading (…)solve/main/vocab.txt: 100%|█████████████████████████████████████████████████████████████████| 1.65M/1.65M [00:03<00:00, 543kB/s]Downloading (…)solve/main/vocab.txt: 100%|█████████████████████████████████████████████████████████████████| 1.65M/1.65M [00:03<00:00, 543kB/s]
Downloading (…)cial_tokens_map.json:   0%|                                                                           | 0.00/112 [00:00<?, ?B/s]Downloading (…)cial_tokens_map.json: 100%|████████████████████████████████████████████████████████████████████| 112/112 [00:00<00:00, 62.9kB/s]
Downloading pytorch_model.bin:   0%|                                                                                | 0.00/714M [00:00<?, ?B/s]Downloading pytorch_model.bin:   1%|█                                                                      | 10.5M/714M [00:00<00:07, 90.1MB/s]Downloading pytorch_model.bin:   6%|████▏                                                                   | 41.9M/714M [00:00<00:03, 179MB/s]Downloading pytorch_model.bin:  10%|███████▍                                                                | 73.4M/714M [00:00<00:03, 212MB/s]Downloading pytorch_model.bin:  15%|██████████▋                                                              | 105M/714M [00:00<00:02, 223MB/s]Downloading pytorch_model.bin:  19%|█████████████▉                                                           | 136M/714M [00:00<00:02, 230MB/s]Downloading pytorch_model.bin:  23%|█████████████████▏                                                       | 168M/714M [00:00<00:02, 231MB/s]Downloading pytorch_model.bin:  28%|████████████████████▎                                                    | 199M/714M [00:00<00:02, 234MB/s]Downloading pytorch_model.bin:  32%|███████████████████████▌                                                 | 231M/714M [00:01<00:02, 240MB/s]Downloading pytorch_model.bin:  37%|██████████████████████████▊                                              | 262M/714M [00:01<00:01, 243MB/s]Downloading pytorch_model.bin:  41%|██████████████████████████████                                           | 294M/714M [00:01<00:01, 238MB/s]Downloading pytorch_model.bin:  46%|█████████████████████████████████▏                                       | 325M/714M [00:01<00:01, 231MB/s]Downloading pytorch_model.bin:  50%|████████████████████████████████████▍                                    | 357M/714M [00:01<00:01, 231MB/s]Downloading pytorch_model.bin:  54%|███████████████████████████████████████▋                                 | 388M/714M [00:01<00:01, 231MB/s]Downloading pytorch_model.bin:  59%|██████████████████████████████████████████▊                              | 419M/714M [00:01<00:01, 236MB/s]Downloading pytorch_model.bin:  63%|██████████████████████████████████████████████                           | 451M/714M [00:01<00:01, 237MB/s]Downloading pytorch_model.bin:  68%|█████████████████████████████████████████████████▎                       | 482M/714M [00:02<00:00, 235MB/s]Downloading pytorch_model.bin:  72%|████████████████████████████████████████████████████▌                    | 514M/714M [00:02<00:00, 235MB/s]Downloading pytorch_model.bin:  76%|███████████████████████████████████████████████████████▋                 | 545M/714M [00:02<00:00, 238MB/s]Downloading pytorch_model.bin:  81%|██████████████████████████████████████████████████████████▉              | 577M/714M [00:02<00:00, 232MB/s]Downloading pytorch_model.bin:  85%|██████████████████████████████████████████████████████████████▏          | 608M/714M [00:02<00:00, 232MB/s]Downloading pytorch_model.bin:  90%|█████████████████████████████████████████████████████████████████▎       | 640M/714M [00:02<00:00, 232MB/s]Downloading pytorch_model.bin:  94%|████████████████████████████████████████████████████████████████████▌    | 671M/714M [00:02<00:00, 235MB/s]Downloading pytorch_model.bin:  98%|███████████████████████████████████████████████████████████████████████▊ | 703M/714M [00:03<00:00, 239MB/s]Downloading pytorch_model.bin: 100%|█████████████████████████████████████████████████████████████████████████| 714M/714M [00:03<00:00, 231MB/s]
Some weights of the model checkpoint at DeepPavlov/rubert-base-cased were not used when initializing BertModel: ['cls.predictions.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.seq_relationship.bias', 'cls.predictions.decoder.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of the model checkpoint at DeepPavlov/rubert-base-cased were not used when initializing BertModel: ['cls.predictions.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.seq_relationship.bias', 'cls.predictions.decoder.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of the model checkpoint at DeepPavlov/rubert-base-cased were not used when initializing BertModel: ['cls.predictions.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.seq_relationship.bias', 'cls.predictions.decoder.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
