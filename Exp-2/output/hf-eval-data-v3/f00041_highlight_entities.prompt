{'code': '###Instruction: I have jobs descriptions in French for sales manager, please highlight names of organizations or cities within the text.\n###Input: "La société de Paris est spécialisée dans la vente de véhicules électriques. Responsable des ventes, vous travaillerez au sein d\'une équipe dynamique dans l\'agence de Lyon. Vous êtes chargé(e) de développer le portefeuille client et d\'assurer la satisfaction des clients existants. Dans ce contexte, vous devrez travailler en lien étroit avec le directeur commercial et les autres équipes de l\'entreprise. Une expérience préalable chez Renault est un atout."\n###Output: "La société de [Paris] est spécialisée dans la vente de véhicules électriques. Responsable des ventes, vous travaillerez au sein d\'une équipe dynamique dans l\'agence de [Lyon]. Vous êtes chargé(e) de développer le portefeuille client et d\'assurer la satisfaction des clients existants. Dans ce contexte, vous devrez travailler en lien étroit avec le directeur commercial et les autres équipes de l\'entreprise. Une expérience préalable chez [Renault] est un atout."\n\n```python\nfrom transformers import AutoTokenizer, AutoModelForTokenClassification, pipeline\n\ntokenizer = AutoTokenizer.from_pretrained(\'Jean-Baptiste/camembert-ner\')\nmodel = AutoModelForTokenClassification.from_pretrained(\'Jean-Baptiste/camembert-ner\')\nnlp = pipeline(\'ner\', model=model, tokenizer=tokenizer, aggregation_strategy=\'simple\')\n\njob_description = "La société de Paris est spécialisée dans la vente de véhicules électriques. Responsable des ventes, vous travaillerez au sein d\'une équipe dynamique dans l\'agence de Lyon. Vous êtes chargé(e) de développer le portefeuille client et d\'assurer la satisfaction des clients existants. Dans ce contexte, vous devrez travailler en lien étroit avec le directeur commercial et les autres équipes de l\'entreprise. Une expérience préalable chez Renault est un atout."\nentities = nlp(job_description)\n\nhighlighted_text = []\nprevious_offset = 0\nfor entity in entities:\n    start_offset, end_offset = entity[\'start\'], entity[\'end\']\n    label = entity[\'entity\']\n    if label in [\'B-ORG\', \'I-ORG\', \'B-LOC\', \'I-LOC\']:\n        highlighted_text.append(job_description[previous_offset:start_offset])\n        highlighted_text.append(f\'[{job_description[start_offset:end_offset]}]\')\n        previous_offset = end_offset\nhighlighted_text.append(job_description[previous_offset:])\n\nresult = \'\'.join(highlighted_text)\nprint(result)\n```', 'api_call': "AutoModelForTokenClassification.from_pretrained('Jean-Baptiste/camembert-ner')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Natural Language Processing Token Classification', 'framework': 'Hugging Face Transformers', 'functionality': 'Named Entity Recognition', 'api_name': 'Jean-Baptiste/camembert-ner', 'api_call': "AutoModelForTokenClassification.from_pretrained('Jean-Baptiste/camembert-ner')", 'api_arguments': {'model': 'model', 'tokenizer': 'tokenizer', 'aggregation_strategy': 'simple'}, 'python_environment_requirements': {'transformers': 'AutoTokenizer, AutoModelForTokenClassification, pipeline'}, 'example_code': "from transformers import AutoTokenizer, AutoModelForTokenClassification\ntokenizer = AutoTokenizer.from_pretrained(Jean-Baptiste/camembert-ner)\nmodel = AutoModelForTokenClassification.from_pretrained(Jean-Baptiste/camembert-ner)\n\nfrom transformers import pipeline\nnlp = pipeline('ner', model=model, tokenizer=tokenizer, aggregation_strategy=simple)\nnlp(Apple est cre le 1er avril 1976 dans le garage de la maison d'enfance de Steve Jobs  Los Altos en Californie par Steve Jobs, Steve Wozniak et Ronald Wayne14, puis constitue sous forme de socit le 3 janvier 1977  l'origine sous le nom d'Apple Computer, mais pour ses 30 ans et pour reflter la diversification de ses produits, le mot « computer  est retir le 9 janvier 2015.)", 'performance': {'dataset': 'wikiner-fr', 'accuracy': {'overall_f1': 0.8914, 'PER_f1': 0.9483, 'ORG_f1': 0.8181, 'LOC_f1': 0.8955, 'MISC_f1': 0.8146}}, 'description': 'camembert-ner is a Named Entity Recognition (NER) model fine-tuned from camemBERT on the wikiner-fr dataset. It can recognize entities such as persons, organizations, locations, and miscellaneous entities.'}}

