2023-11-12 08:39:11.119523: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-12 08:39:11.162905: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-12 08:39:11.792309: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
Downloading model.safetensors:   0%|                                                                                | 0.00/378M [00:00<?, ?B/s]Downloading model.safetensors:   3%|█▉                                                                     | 10.5M/378M [00:01<01:01, 5.95MB/s]Downloading model.safetensors:   6%|███▉                                                                   | 21.0M/378M [00:02<00:37, 9.64MB/s]Downloading model.safetensors:   8%|█████▉                                                                 | 31.5M/378M [00:03<00:29, 11.8MB/s]Downloading model.safetensors:  11%|███████▊                                                               | 41.9M/378M [00:03<00:24, 13.6MB/s]Downloading model.safetensors:  14%|█████████▊                                                             | 52.4M/378M [00:04<00:22, 14.7MB/s]Downloading model.safetensors:  17%|███████████▊                                                           | 62.9M/378M [00:04<00:20, 15.4MB/s]Downloading model.safetensors:  19%|█████████████▊                                                         | 73.4M/378M [00:05<00:22, 13.4MB/s]Downloading model.safetensors:  22%|███████████████▋                                                       | 83.9M/378M [00:06<00:19, 14.9MB/s]Downloading model.safetensors:  25%|█████████████████▋                                                     | 94.4M/378M [00:06<00:18, 15.5MB/s]Downloading model.safetensors:  28%|███████████████████▉                                                    | 105M/378M [00:07<00:17, 16.0MB/s]Downloading model.safetensors:  30%|█████████████████████▉                                                  | 115M/378M [00:08<00:16, 16.0MB/s]Downloading model.safetensors:  33%|███████████████████████▉                                                | 126M/378M [00:08<00:15, 16.4MB/s]Downloading model.safetensors:  36%|█████████████████████████▉                                              | 136M/378M [00:09<00:14, 16.6MB/s]Downloading model.safetensors:  39%|███████████████████████████▉                                            | 147M/378M [00:10<00:13, 16.7MB/s]Downloading model.safetensors:  42%|█████████████████████████████▉                                          | 157M/378M [00:10<00:13, 16.9MB/s]Downloading model.safetensors:  44%|███████████████████████████████▉                                        | 168M/378M [00:11<00:12, 16.7MB/s]Downloading model.safetensors:  47%|█████████████████████████████████▉                                      | 178M/378M [00:11<00:11, 16.8MB/s]Downloading model.safetensors:  50%|███████████████████████████████████▉                                    | 189M/378M [00:13<00:13, 13.6MB/s]Downloading model.safetensors:  53%|█████████████████████████████████████▉                                  | 199M/378M [00:13<00:12, 14.7MB/s]Downloading model.safetensors:  55%|███████████████████████████████████████▉                                | 210M/378M [00:14<00:11, 15.2MB/s]Downloading model.safetensors:  58%|█████████████████████████████████████████▉                              | 220M/378M [00:14<00:10, 15.3MB/s]Downloading model.safetensors:  61%|███████████████████████████████████████████▉                            | 231M/378M [00:15<00:09, 15.2MB/s]Downloading model.safetensors:  64%|█████████████████████████████████████████████▉                          | 241M/378M [00:16<00:09, 15.1MB/s]Downloading model.safetensors:  67%|███████████████████████████████████████████████▉                        | 252M/378M [00:17<00:08, 15.4MB/s]Downloading model.safetensors:  69%|█████████████████████████████████████████████████▉                      | 262M/378M [00:17<00:07, 15.2MB/s]Downloading model.safetensors:  72%|███████████████████████████████████████████████████▉                    | 273M/378M [00:18<00:06, 15.4MB/s]Downloading model.safetensors:  75%|█████████████████████████████████████████████████████▉                  | 283M/378M [00:19<00:06, 15.4MB/s]Downloading model.safetensors:  78%|███████████████████████████████████████████████████████▉                | 294M/378M [00:19<00:05, 15.4MB/s]Downloading model.safetensors:  80%|█████████████████████████████████████████████████████████▊              | 304M/378M [00:20<00:04, 15.4MB/s]Downloading model.safetensors:  83%|███████████████████████████████████████████████████████████▊            | 315M/378M [00:21<00:04, 15.5MB/s]Downloading model.safetensors:  86%|█████████████████████████████████████████████████████████████▊          | 325M/378M [00:21<00:03, 15.3MB/s]Downloading model.safetensors:  89%|███████████████████████████████████████████████████████████████▊        | 336M/378M [00:22<00:02, 15.5MB/s]Downloading model.safetensors:  91%|█████████████████████████████████████████████████████████████████▊      | 346M/378M [00:23<00:02, 15.4MB/s]Downloading model.safetensors:  94%|███████████████████████████████████████████████████████████████████▊    | 357M/378M [00:24<00:01, 12.5MB/s]Downloading model.safetensors:  97%|█████████████████████████████████████████████████████████████████████▊  | 367M/378M [00:25<00:00, 13.4MB/s]Downloading model.safetensors: 100%|███████████████████████████████████████████████████████████████████████▊| 377M/378M [00:26<00:00, 11.5MB/s]Downloading model.safetensors: 100%|████████████████████████████████████████████████████████████████████████| 378M/378M [00:26<00:00, 14.4MB/s]
Some weights of the model checkpoint at hackathon-pln-es/wav2vec2-base-finetuned-sentiment-classification-MESD were not used when initializing Wav2Vec2ForSequenceClassification: ['wav2vec2.encoder.pos_conv_embed.conv.weight_g', 'wav2vec2.encoder.pos_conv_embed.conv.weight_v']
- This IS expected if you are initializing Wav2Vec2ForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing Wav2Vec2ForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of Wav2Vec2ForSequenceClassification were not initialized from the model checkpoint at hackathon-pln-es/wav2vec2-base-finetuned-sentiment-classification-MESD and are newly initialized: ['wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original0', 'wav2vec2.encoder.pos_conv_embed.conv.parametrizations.weight.original1']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Traceback (most recent call last):
  File "./f00719_classify_sentiment.py", line 43, in <module>
    print(test_classify_sentiment())
  File "./f00719_classify_sentiment.py", line 36, in test_classify_sentiment
    assert sentiment in ['positive', 'neutral', 'negative'], 'Invalid sentiment'
AssertionError: Invalid sentiment
