{'code': '###Instruction: We have a collection of low-resolution images of movie characters, and we need to upscale those images to get a more detailed high-resolution image.\n###Output: <<<domain>>>: Multimodal Text-to-Image\n<<<api_call>>>: StableDiffusionLatentUpscalePipeline.from_pretrained(\'stabilityai/sd-x2-latent-upscaler\', torch_dtype=torch.float16)\n<<<api_provider>>>: Hugging Face\n<<<explanation>>>: 1. Firstly, we import the necessary packages and classes, including StableDiffusionLatentUpscalePipeline and StableDiffusionPipeline from the \'diffusers\' package, and torch for handling tensors.\n2. We then create a pipeline using the pretrained \'CompVis/stable-diffusion-v1-4\' model to generate the low-resolution latent image.\n3. Next, we create an instance of the StableDiffusionLatentUpscalePipeline with the pretrained \'stabilityai/sd-x2-latent-upscaler\' model. This is our upscaling model for generating high-resolution images.\n4. We can now supply a text prompt describing the desired image, such as "a photo of a movie character".\n5. Using the low-resolution latent image and the upscaling model, we can generate the upscaled high-resolution image.\n6. Finally, we save the upscaled high-resolution image as a .png file.\n<<<code>>>: from diffusers import StableDiffusionLatentUpscalePipeline, StableDiffusionPipeline\nimport torch\npipeline = StableDiffusionPipeline.from_pretrained(\'CompVis/stable-diffusion-v1-4\', torch_dtype=torch.float16)\npipeline.to(\'cuda\')\nupscaler = StableDiffusionLatentUpscalePipeline.from_pretrained(\'stabilityai/sd-x2-latent-upscaler\', torch_dtype=torch.float16)\nupscaler.to(\'cuda\')\nprompt = "a photo of a movie character"\ngenerator = torch.manual_seed(33)\nlow_res_latents = pipeline(prompt, generator=generator, output_type=\'latent\').images\nupscaled_image = upscaler(prompt=prompt, image=low_res_latents, num_inference_steps=20, guidance_scale=0, generator=generator).images[0]\nupscaled_image.save("movie_character_high_resolution.png")\n', 'api_call': 'StableDiffusionLatentUpscalePipeline.from_pretrained(stabilityai/sd-x2-latent-upscaler, torch_dtype=torch.float16)', 'provider': 'Hugging Face', 'api_data': {'domain': 'Multimodal Text-to-Image', 'framework': 'Hugging Face', 'functionality': 'Image Upscaling', 'api_name': 'stabilityai/sd-x2-latent-upscaler', 'api_call': 'StableDiffusionLatentUpscalePipeline.from_pretrained(stabilityai/sd-x2-latent-upscaler, torch_dtype=torch.float16)', 'api_arguments': {'prompt': 'text prompt', 'image': 'low resolution latents', 'num_inference_steps': 20, 'guidance_scale': 0, 'generator': 'torch generator'}, 'python_environment_requirements': ['git+https://github.com/huggingface/diffusers.git', 'transformers', 'accelerate', 'scipy', 'safetensors'], 'example_code': 'from diffusers import StableDiffusionLatentUpscalePipeline, StableDiffusionPipeline\nimport torch\npipeline = StableDiffusionPipeline.from_pretrained(CompVis/stable-diffusion-v1-4, torch_dtype=torch.float16)\npipeline.to(cuda)\nupscaler = StableDiffusionLatentUpscalePipeline.from_pretrained(stabilityai/sd-x2-latent-upscaler, torch_dtype=torch.float16)\nupscaler.to(cuda)\nprompt = a photo of an astronaut high resolution, unreal engine, ultra realistic\ngenerator = torch.manual_seed(33)\nlow_res_latents = pipeline(prompt, generator=generator, output_type=latent).images\nupscaled_image = upscaler(prompt=prompt, image=low_res_latents, num_inference_steps=20, guidance_scale=0, generator=generator).images[0]\nupscaled_image.save(astronaut_1024.png)', 'performance': {'dataset': 'LAION-2B', 'accuracy': 'Not specified'}, 'description': "Stable Diffusion x2 latent upscaler is a diffusion-based upscaler model developed by Katherine Crowson in collaboration with Stability AI. It is designed to upscale Stable Diffusion's latent denoised image embeddings, allowing for fast text-to-image and upscaling pipelines. The model was trained on a high-resolution subset of the LAION-2B dataset and works with all Stable Diffusion checkpoints."}}

Traceback (most recent call last):
  File "output/hf-eval-data-v2/f00094_upscale_image.py", line 3, in <module>
    from diffusers import StableDiffusionLatentUpscalePipeline, StableDiffusionPipeline
ModuleNotFoundError: No module named 'diffusers'
