2023-11-12 04:37:12.828088: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-12 04:37:12.870578: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-12 04:37:13.582148: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Traceback (most recent call last):
  File "./f00588_table_question_answering.py", line 50, in <module>
    test_table_question_answering()
  File "./f00588_table_question_answering.py", line 36, in test_table_question_answering
    assert table_question_answering(table, question) == expected_answer
  File "./f00588_table_question_answering.py", line 21, in table_question_answering
    inputs = tokenizer(table=table, queries=question, return_tensors='pt')
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/models/tapas/tokenization_tapas.py", line 630, in __call__
    assert isinstance(table, pd.DataFrame), "Table must be of type pd.DataFrame"
AssertionError: Table must be of type pd.DataFrame
