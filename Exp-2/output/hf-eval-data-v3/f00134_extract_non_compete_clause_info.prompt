{'code': '###Instruction: Extract information about a non-compete clause from a legal document with a context related to data protection.\n###Input: "The data protection provisions set forth in this agreement shall be in effect for a period of 2 years after the termination of services. The non-compete clause states that the service provider is prohibited from providing similar services to any competitor within a 50-mile radius and during the 1-year period following termination of services."\n###Output: <<<domain>>>: Natural Language Processing Question Answering\n<<<api_call>>>: pipeline(\'question-answering\', model=\'Rakib/roberta-base-on-cuad\')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>: 1. Import the \'pipeline\' function from the transformers library.\n2. Create a question-answering pipeline using the specific CUAD-trained RoBERTa model, which is \'Rakib/roberta-base-on-cuad\'.\n3. Use the pipeline to send the question and context to the model. The context represents the legal document and the question is related to the non-compete clause.\n4. The model will then return the extracted answer based on the given context.\n<<<code>>>: from transformers import pipeline\nqa_pipeline = pipeline(\'question-answering\', model=\'Rakib/roberta-base-on-cuad\')\ncontext = "The data protection provisions set forth in this agreement shall be in effect for a period of 2 years after the termination of services. The non-compete clause states that the service provider is prohibited from providing similar services to any competitor within a 50-mile radius and during the 1-year period following termination of services."\nquestion = "What are the terms of the non-compete clause?"\nanswer = qa_pipeline(question=question, context=context)\nprint(answer[\'answer\'])', 'api_call': "AutoModelForQuestionAnswering.from_pretrained('Rakib/roberta-base-on-cuad')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Natural Language Processing Question Answering', 'framework': 'Hugging Face Transformers', 'functionality': 'Question Answering', 'api_name': 'Rakib/roberta-base-on-cuad', 'api_call': "AutoModelForQuestionAnswering.from_pretrained('Rakib/roberta-base-on-cuad')", 'api_arguments': {'tokenizer': 'AutoTokenizer.from_pretrained(Rakib/roberta-base-on-cuad)'}, 'python_environment_requirements': {'transformers': 'latest'}, 'example_code': {'import': 'from transformers import AutoTokenizer, AutoModelForQuestionAnswering', 'tokenizer': 'tokenizer = AutoTokenizer.from_pretrained(Rakib/roberta-base-on-cuad)', 'model': 'model = AutoModelForQuestionAnswering.from_pretrained(Rakib/roberta-base-on-cuad)'}, 'performance': {'dataset': 'cuad', 'accuracy': '46.6%'}, 'description': 'This model is trained for the task of Question Answering on Legal Documents using the CUAD dataset. It is based on the RoBERTa architecture and can be used to extract answers from legal contracts and documents.'}}

