{'code': '###Instruction: Create a function that can determine if a given text is a question or a statement.\n###Output: <<<domain>>>: Natural Language Processing Text Classification\n<<<api_call>>>: AutoModelForSequenceClassification.from_pretrained(\'shahrukhx01/question-vs-statement-classifier\')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>: 1. Import the necessary libraries: AutoTokenizer and AutoModelForSequenceClassification from the transformers package provided by Hugging Face.\n2. Load the tokenizer and model using the `from_pretrained` method with the provided model name: \'shahrukhx01/question-vs-statement-classifier\'. This model is trained to classify text inputs into either questions or statements.\n3. Create a function that uses the tokenizer and model to classify the input text and return whether it is a question or a statement.\n<<<code>>>: from transformers import AutoTokenizer, AutoModelForSequenceClassification\n\ntokenizer = AutoTokenizer.from_pretrained(\'shahrukhx01/question-vs-statement-classifier\')\nmodel = AutoModelForSequenceClassification.from_pretrained(\'shahrukhx01/question-vs-statement-classifier\')\n\ndef classify_text(text):\n    inputs = tokenizer(text, return_tensors="pt")\n    outputs = model(**inputs)\n    predicted_class = outputs.logits.argmax(dim=-1).item()\n    \n    if predicted_class == 0:\n        return "question"\n    else:\n        return "statement"\n', 'api_call': "AutoModelForSequenceClassification.from_pretrained('shahrukhx01/question-vs-statement-classifier')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Natural Language Processing Text Classification', 'framework': 'Hugging Face Transformers', 'functionality': 'Text Classification', 'api_name': 'shahrukhx01/question-vs-statement-classifier', 'api_call': "AutoModelForSequenceClassification.from_pretrained('shahrukhx01/question-vs-statement-classifier')", 'api_arguments': {'tokenizer': 'AutoTokenizer.from_pretrained(shahrukhx01/question-vs-statement-classifier)'}, 'python_environment_requirements': {'transformers': 'from transformers import AutoTokenizer, AutoModelForSequenceClassification'}, 'example_code': 'tokenizer = AutoTokenizer.from_pretrained(shahrukhx01/question-vs-statement-classifier)\nmodel = AutoModelForSequenceClassification.from_pretrained(shahrukhx01/question-vs-statement-classifier)', 'performance': {'dataset': 'Haystack', 'accuracy': 'Not provided'}, 'description': 'Trained to add the feature for classifying queries between Question Query vs Statement Query using classification in Haystack'}}






Traceback (most recent call last):
  File "output/hf-eval-data-v2/f00125_classify_text.py", line 42, in <module>
    test_classify_text()
  File "output/hf-eval-data-v2/f00125_classify_text.py", line 35, in test_classify_text
    assert classify_text('What is your name?') == 'question'
AssertionError
