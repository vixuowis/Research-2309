2023-11-11 23:51:34.773418: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-11 23:51:34.819794: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-11 23:51:35.497887: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/convert_slow_tokenizer.py:473: UserWarning: The sentencepiece tokenizer that you are converting to a fast tokenizer uses the byte fallback option which is not implemented in the fast tokenizers. In practice this means that the fast version of the tokenizer can produce unknown tokens whereas the sentencepiece version would have converted these unknown tokens into a sequence of byte tokens matching the original piece of text.
  warnings.warn(
Traceback (most recent call last):
  File "./f00398_classify_topic.py", line 39, in <module>
    test_classify_topic()
  File "./f00398_classify_topic.py", line 34, in test_classify_topic
    assert classify_topic('') == 'ValueError'
  File "./f00398_classify_topic.py", line 25, in classify_topic
    result = classifier(sentence, candidate_labels)
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/pipelines/zero_shot_classification.py", line 206, in __call__
    return super().__call__(sequences, **kwargs)
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/pipelines/base.py", line 1132, in __call__
    return next(
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/pipelines/pt_utils.py", line 124, in __next__
    item = next(self.iterator)
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/pipelines/pt_utils.py", line 266, in __next__
    processed = self.infer(next(self.iterator), **self.params)
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 32, in fetch
    data.append(next(self.dataset_iter))
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/pipelines/pt_utils.py", line 183, in __next__
    processed = next(self.subiterator)
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/pipelines/zero_shot_classification.py", line 209, in preprocess
    sequence_pairs, sequences = self._args_parser(inputs, candidate_labels, hypothesis_template)
  File "/root/miniconda3/envs/py38/lib/python3.8/site-packages/transformers/pipelines/zero_shot_classification.py", line 27, in __call__
    raise ValueError("You must include at least one label and at least one sequence.")
ValueError: You must include at least one label and at least one sequence.
