{'code': '###Instruction: Please help me extract the names of people, organizations, and locations mentioned in the given text.\n###Input: Hello, my name is John Doe, and I work at Microsoft. Tomorrow, I\'ll be going to a conference in San Francisco.\n###Output: <<<domain>>>: Natural Language Processing Token Classification\n<<<api_call>>>: pipeline(\'ner\', model=\'dslim/bert-base-NER\', tokenizer=\'dslim/bert-base-NER\')\n<<<api_provider>>>: Transformers\n<<<explanation>>>: 1. Import the necessary libraries, which are \'pipeline\', \'AutoTokenizer\', and \'AutoModelForTokenClassification\' from transformers.\n2. Instantiate the tokenizer and model using the \'dslim/bert-base-NER\' model.\n3. Create a Named Entity Recognition (NER) pipeline using the tokenizer and model.\n4. Pass the input text through the NER pipeline to extract entities such as names, organizations, and locations.\n<<<code>>>: from transformers import AutoTokenizer, AutoModelForTokenClassification, pipeline\n\ntokenizer = AutoTokenizer.from_pretrained(\'dslim/bert-base-NER\')\nmodel = AutoModelForTokenClassification.from_pretrained(\'dslim/bert-base-NER\')\nner_pipeline = pipeline(\'ner\', model=model, tokenizer=tokenizer)\n\ninput_text = "Hello, my name is John Doe, and I work at Microsoft. Tomorrow, I\'ll be going to a conference in San Francisco."\nner_results = ner_pipeline(input_text)\nprint(ner_results)', 'api_call': "AutoModelForTokenClassification.from_pretrained('dslim/bert-base-NER')", 'provider': 'Transformers', 'api_data': {'domain': 'Natural Language Processing Token Classification', 'framework': 'Transformers', 'functionality': 'Named Entity Recognition', 'api_name': 'dslim/bert-base-NER', 'api_call': "AutoModelForTokenClassification.from_pretrained('dslim/bert-base-NER')", 'api_arguments': {'model': 'AutoModelForTokenClassification.from_pretrained(dslim/bert-base-NER)', 'tokenizer': 'AutoTokenizer.from_pretrained(dslim/bert-base-NER)'}, 'python_environment_requirements': ['transformers'], 'example_code': 'from transformers import AutoTokenizer, AutoModelForTokenClassification\nfrom transformers import pipeline\ntokenizer = AutoTokenizer.from_pretrained(dslim/bert-base-NER)\nmodel = AutoModelForTokenClassification.from_pretrained(dslim/bert-base-NER)\nnlp = pipeline(ner, model=model, tokenizer=tokenizer)\nexample = My name is Wolfgang and I live in Berlin\nner_results = nlp(example)\nprint(ner_results)', 'performance': {'dataset': 'conll2003', 'accuracy': {'f1': 91.3, 'precision': 90.7, 'recall': 91.9}}, 'description': 'bert-base-NER is a fine-tuned BERT model that is ready to use for Named Entity Recognition and achieves state-of-the-art performance for the NER task. It has been trained to recognize four types of entities: location (LOC), organizations (ORG), person (PER) and Miscellaneous (MISC). Specifically, this model is a bert-base-cased model that was fine-tuned on the English version of the standard CoNLL-2003 Named Entity Recognition dataset.'}}

