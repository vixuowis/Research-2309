{'code': "###Instruction: We would like to restore an old and blurry image of our grandparents for an anniversary present.\n###Output: <<<domain>>>: Computer Vision Image-to-Image\n<<<api_call>>>: from_pretrained_keras('google/maxim-s3-deblurring-gopro')\n<<<api_provider>>>: Keras\n<<<explanation>>>: 1. Import the required classes and functions from huggingface_hub, PIL, tensorflow, and numpy packages. This includes from_pretrained_keras, Image, and tensorflow functions.\n2. Load the old, blurry image using Image.open and convert it to a numpy array.\n3. Convert the numpy array to a TensorFlow tensor, and resize it to 256x256 pixels as required by the model.\n4. Use the from_pretrained_keras function to load the 'google/maxim-s3-deblurring-gopro' model, which is designed for image deblurring tasks.\n5. Make a prediction using the model to deblur the image of your grandparents.\n6. Save the deblurred image for your anniversary present.\n<<<code>>>: from huggingface_hub import from_pretrained_keras\nfrom PIL import Image\nimport tensorflow as tf\nimport numpy as np\n\nimage = Image.open('path/to/blurry_image.jpg')\nimage = np.array(image)\nimage = tf.convert_to_tensor(image)\nimage = tf.image.resize(image, (256, 256))\n\nmodel = from_pretrained_keras('google/maxim-s3-deblurring-gopro')\npredictions = model.predict(tf.expand_dims(image, 0))\n\ndeblurred_image = tf.squeeze(predictions, axis=0)\ndeblurred_image = tf.clip_by_value(deblurred_image, 0, 255)\ndeblurred_image = tf.cast(deblurred_image, tf.uint8)\n\ndeblurred_image = Image.fromarray(deblurred_image.numpy())\ndeblurred_image.save('deblurred_image.png')\n", 'api_call': "from_pretrained_keras('google/maxim-s3-deblurring-gopro')", 'provider': 'Keras', 'api_data': {'domain': 'Computer Vision Image-to-Image', 'framework': 'Keras', 'functionality': 'Image Deblurring', 'api_name': 'google/maxim-s3-deblurring-gopro', 'api_call': "from_pretrained_keras('google/maxim-s3-deblurring-gopro')", 'api_arguments': ['image'], 'python_environment_requirements': ['huggingface_hub', 'PIL', 'tensorflow', 'numpy', 'requests'], 'example_code': 'from huggingface_hub import from_pretrained_keras\nfrom PIL import Image\nimport tensorflow as tf\nimport numpy as np\nimport requests\nurl = https://github.com/sayakpaul/maxim-tf/raw/main/images/Deblurring/input/1fromGOPR0950.png\nimage = Image.open(requests.get(url, stream=True).raw)\nimage = np.array(image)\nimage = tf.convert_to_tensor(image)\nimage = tf.image.resize(image, (256, 256))\nmodel = from_pretrained_keras(google/maxim-s3-deblurring-gopro)\npredictions = model.predict(tf.expand_dims(image, 0))', 'performance': {'dataset': 'GoPro', 'accuracy': {'PSNR': 32.86, 'SSIM': 0.961}}, 'description': 'MAXIM model pre-trained for image deblurring. It was introduced in the paper MAXIM: Multi-Axis MLP for Image Processing by Zhengzhong Tu, Hossein Talebi, Han Zhang, Feng Yang, Peyman Milanfar, Alan Bovik, Yinxiao Li and first released in this repository.'}}

