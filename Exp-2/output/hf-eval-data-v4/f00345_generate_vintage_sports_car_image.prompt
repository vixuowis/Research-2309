{'code': '###Instruction: The marketing department wants to use AI-generated images for their next social media campaign. They want a high-resolution image of a vintage sports car racing through a desert landscape during sunset. \n###Output: <<<domain>>>: Multimodal Text-to-Image\n<<<api_call>>>: StableDiffusionPipeline.from_pretrained(\'prompthero/openjourney\', torch_dtype=torch.float16)\n<<<api_provider>>>: Hugging Face\n<<<explanation>>>: 1. The first step is to import the required libraries, \'diffusers\' and \'torch\'.\n2. We create an instance of the \'StableDiffusionPipeline\' which is a model capable of generating high-resolution images from textual prompts.\n3. We load the pre-trained model \'prompthero/openjourney\' by calling the \'from_pretrained\' method.\n4. We then provide the textual prompt describing the image we want, for example: "A vintage sports car racing through a desert landscape during sunset".\n5. Finally, we run the pipeline on the prompt to generate the AI-generated image.\n<<<code>>>: from diffusers import StableDiffusionPipeline\nimport torch\n\nmodel_id = \'prompthero/openjourney\'\npipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16)\npipe = pipe.to(\'cuda\')\nprompt = \'A vintage sports car racing through a desert landscape during sunset\'\nimage = pipe(prompt).images[0]\nimage.save(\'./vintage_sports_car_desert_sunset.png\')\n', 'api_call': "StableDiffusionPipeline.from_pretrained('prompthero/openjourney', torch_dtype=torch.float16)", 'provider': 'Hugging Face', 'api_data': {'domain': 'Multimodal Text-to-Image', 'framework': 'Hugging Face', 'functionality': 'Text-to-Image', 'api_name': 'prompthero/openjourney', 'api_call': "StableDiffusionPipeline.from_pretrained('prompthero/openjourney', torch_dtype=torch.float16)", 'api_arguments': {'prompt': 'string'}, 'python_environment_requirements': ['diffusers', 'torch'], 'example_code': 'from diffusers import StableDiffusionPipeline\nimport torch\nmodel_id = prompthero/openjourney\npipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16)\npipe = pipe.to(cuda)\nprompt = retro serie of different cars with different colors and shapes, mdjrny-v4 style\nimage = pipe(prompt).images[0]\nimage.save(./retro_cars.png)', 'performance': {'dataset': 'Midjourney images', 'accuracy': 'Not specified'}, 'description': 'Openjourney is an open source Stable Diffusion fine-tuned model on Midjourney images, by PromptHero. It can be used for generating AI art based on text prompts.'}}

