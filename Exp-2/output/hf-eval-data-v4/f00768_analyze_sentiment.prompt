{'code': "###Instruction: Develop a tool to analyze restaurant reviews from Yelp for positive or negative sentiments.\n###Output: <<<domain>>>: Natural Language Processing Text Classification\n<<<api_call>>>: AutoTokenizer.from_pretrained('bert-base-uncased')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>: 1. First, import the necessary classes for the model and tokenizer from the transformers package. This includes the AutoTokenizer and AutoConfig class for pre-processing the text input.\n2. Load the tokenizer and config using 'bert-base-uncased' and 'potatobunny/results-yelp' respectively. This model has been fine-tuned for sentiment analysis and is able to classify the given text into positive or negative.\n3. Tokenize the input text (restaurant review) using the tokenizer.\n4. Perform text classification using the loaded model to predict if the review is positive or negative.\n<<<code>>>: from transformers import AutoTokenizer, AutoConfig, AutoModelForSequenceClassification\ntokenizer = AutoTokenizer.from_pretrained('bert-base-uncased')\nconfig = AutoConfig.from_pretrained('potatobunny/results-yelp')\nmodel = AutoModelForSequenceClassification.from_pretrained('potatobunny/results-yelp', config=config)\ninputs = tokenizer('Review text here', return_tensors='pt')\noutputs = model(**inputs)\n", 'api_call': "AutoTokenizer.from_pretrained('bert-base-uncased')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Natural Language Processing Text Classification', 'framework': 'Hugging Face Transformers', 'functionality': 'Transformers', 'api_name': 'results-yelp', 'api_call': "AutoTokenizer.from_pretrained('bert-base-uncased')", 'api_arguments': {'tokenizer': "AutoTokenizer.from_pretrained('bert-base-uncased')", 'config': "AutoConfig.from_pretrained('potatobunny/results-yelp')"}, 'python_environment_requirements': {'Transformers': '4.18.0', 'Pytorch': '1.10.0+cu111', 'Datasets': '2.0.0', 'Tokenizers': '0.12.1'}, 'example_code': '', 'performance': {'dataset': 'Yelp', 'accuracy': 0.9302}, 'description': 'This model is a fine-tuned version of textattack/bert-base-uncased-yelp-polarity on a filtered and manually reviewed Yelp dataset containing restaurant reviews only. It is intended to perform text classification, specifically sentiment analysis, on text data obtained from restaurant reviews to determine if the particular review is positive or negative.'}}

