{'code': '###Instruction: We have a news article and we need to extract all the entities like the names of people, organizations, and locations.\n###Output: <<<domain>>>: Natural Language Processing Token Classification\n<<<api_call>>>: pipeline(\'ner\', model=\'Davlan/distilbert-base-multilingual-cased-ner-hrl\', tokenizer=\'Davlan/distilbert-base-multilingual-cased-ner-hrl\')\n<<<api_provider>>>: Transformers\n<<<explanation>>>: 1. Import the \'pipeline\' function from transformers library, AutoTokenizer, and AutoModelForTokenClassification.\n2. Load the model (\'Davlan/distilbert-base-multilingual-cased-ner-hrl\') using AutoTokenizer and AutoModelForTokenClassification, which has been trained to identify named entities such as people, organizations, and locations.\n3. Create a named entity recognition (NER) pipeline using the model and tokenizer.\n4. Input your news article text into the NER pipeline, and it will extract named entities such as people, organizations, and locations.\n<<<code>>>: from transformers import AutoTokenizer, AutoModelForTokenClassification\nfrom transformers import pipeline\ntokenizer = AutoTokenizer.from_pretrained(\'Davlan/distilbert-base-multilingual-cased-ner-hrl\')\nmodel = AutoModelForTokenClassification.from_pretrained(\'Davlan/distilbert-base-multilingual-cased-ner-hrl\')\nnlp = pipeline(\'ner\', model=model, tokenizer=tokenizer)\nnews_article = "Nader Jokhadar had given Syria the lead with a well-struck header in the seventh minute."\nner_results = nlp(news_article)\nprint(ner_results)\n', 'api_call': "AutoModelForTokenClassification.from_pretrained('Davlan/distilbert-base-multilingual-cased-ner-hrl')", 'provider': 'Transformers', 'api_data': {'domain': 'Natural Language Processing Token Classification', 'framework': 'Transformers', 'functionality': 'Named Entity Recognition', 'api_name': 'distilbert-base-multilingual-cased-ner-hrl', 'api_call': "AutoModelForTokenClassification.from_pretrained('Davlan/distilbert-base-multilingual-cased-ner-hrl')", 'api_arguments': {'model': 'Davlan/distilbert-base-multilingual-cased-ner-hrl', 'tokenizer': 'Davlan/distilbert-base-multilingual-cased-ner-hrl'}, 'python_environment_requirements': ['transformers'], 'example_code': 'from transformers import AutoTokenizer, AutoModelForTokenClassification\nfrom transformers import pipeline\ntokenizer = AutoTokenizer.from_pretrained(Davlan/distilbert-base-multilingual-cased-ner-hrl)\nmodel = AutoModelForTokenClassification.from_pretrained(Davlan/distilbert-base-multilingual-cased-ner-hrl)\nnlp = pipeline(ner, model=model, tokenizer=tokenizer)\nexample = Nader Jokhadar had given Syria the lead with a well-struck header in the seventh minute.\nner_results = nlp(example)\nprint(ner_results)', 'performance': {'dataset': [{'name': 'ANERcorp', 'language': 'Arabic'}, {'name': 'conll 2003', 'language': 'German'}, {'name': 'conll 2003', 'language': 'English'}, {'name': 'conll 2002', 'language': 'Spanish'}, {'name': 'Europeana Newspapers', 'language': 'French'}, {'name': 'Italian I-CAB', 'language': 'Italian'}, {'name': 'Latvian NER', 'language': 'Latvian'}, {'name': 'conll 2002', 'language': 'Dutch'}, {'name': 'Paramopama + Second Harem', 'language': 'Portuguese'}, {'name': 'MSRA', 'language': 'Chinese'}], 'accuracy': 'Not specified'}, 'description': 'distilbert-base-multilingual-cased-ner-hrl is a Named Entity Recognition model for 10 high resourced languages (Arabic, German, English, Spanish, French, Italian, Latvian, Dutch, Portuguese and Chinese) based on a fine-tuned Distiled BERT base model. It has been trained to recognize three types of entities: location (LOC), organizations (ORG), and person (PER).'}}

