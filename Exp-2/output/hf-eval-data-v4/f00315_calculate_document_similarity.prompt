{'code': '###Instruction: I am a data scientist and need to find which among given documents is similar, provide me the example code.\n###Output: <<<domain>>>: Natural Language Processing Sentence Similarity\n<<<api_call>>>: SentenceTransformer(\'sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2\')\n<<<api_provider>>>: Hugging Face Transformers\n<<<explanation>>>: 1. Import the SentenceTransformer class from the sentence_transformers library.\n2. Initialize the SentenceTransformer model by providing the \'sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2\' as the model name.\n3. Encode a list of sentences or documents, which will convert each sentence into a dense vector (embedding) in a 384-dimensional space.\n4. Compare the embeddings to find the similarity between sentences, for example by computing the cosine similarity between the embeddings.\n<<<code>>>: from sentence_transformers import SentenceTransformer\nfrom sklearn.metrics.pairwise import cosine_similarity\n\nmodel = SentenceTransformer(\'sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2\')\ndocuments = ["Document 1 text", "Document 2 text", "Document 3 text"]\nembeddings = model.encode(documents)\n\nsimilarity_matrix = cosine_similarity(embeddings)\nprint(similarity_matrix)', 'api_call': "SentenceTransformer('sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2')", 'provider': 'Hugging Face Transformers', 'api_data': {'domain': 'Natural Language Processing Sentence Similarity', 'framework': 'Hugging Face Transformers', 'functionality': 'Sentence Embeddings', 'api_name': 'sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2', 'api_call': "SentenceTransformer('sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2')", 'api_arguments': ['sentences'], 'python_environment_requirements': 'pip install -U sentence-transformers', 'example_code': "from sentence_transformers import SentenceTransformer\nsentences = [This is an example sentence, Each sentence is converted]\nmodel = SentenceTransformer('sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2')\nembeddings = model.encode(sentences)\nprint(embeddings)", 'performance': {'dataset': 'https://seb.sbert.net', 'accuracy': 'Automated evaluation'}, 'description': 'This is a sentence-transformers model: It maps sentences & paragraphs to a 384 dimensional dense vector space and can be used for tasks like clustering or semantic search.'}}

