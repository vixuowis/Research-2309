# requirements_file --------------------

!pip install -U transformers >=4.0.0

# function_import --------------------

from transformers import pipeline

# function_code --------------------

def korean_table_qa(table, korean_question):
    """
    This function takes a table and a question in Korean, and then uses the pretrained model
    'dsba-lab/koreapas-finetuned-korwikitq' to generate the answer.

    Parameters:
    table (dict): A table containing the data for QA, structured in a dictionary format.
    korean_question (str): The question in Korean to be asked regarding the table data.

    Returns:
    dict: The answer generated by the QA model.
    """
    table_qa = pipeline('table-question-answering', model='dsba-lab/koreapas-finetuned-korwikitq')
    answer = table_qa(table=table, query=korean_question)
    return answer

# test_function_code --------------------

def test_korean_table_qa():
    print("Testing started.")
    
    # Assuming 'load_dataset' function and a dataset named 'korwikitq_samples' are available
    # and 'korwikitq_samples' contains sample tables along with corresponding questions and answers.
    dataset = load_dataset("korwikitq_samples")
    sample = dataset[0]  # Extract a sample from the dataset, which contains table, question, and answer

    # Test case 1: Check if the model returns a non-empty answer
    print("Testing case [1/3] started.")
    response = korean_table_qa(table=sample['table'], korean_question=sample['question'])
    assert response is not None and isinstance(response, dict), f"Test case [1/3] failed: Model returned an empty or invalid response."

    # Test case 2: Check if the answer contains a 'answer' key
    print("Testing case [2/3] started.")
    assert 'answer' in response, f"Test case [2/3] failed: Response does not contain an 'answer' key."

    # Test case 3: Check if the answer is correct based on the provided answer in sample
    print("Testing case [3/3] started.")
    correct_answer = sample['answer']  # The correct answer provided in the sample
    assert response['answer'] == correct_answer, f"Test case [3/3] failed: Model answer '{response['answer']}' does not match correct answer '{correct_answer}'."

    print("Testing finished.")

# Run the test function
test_korean_table_qa()