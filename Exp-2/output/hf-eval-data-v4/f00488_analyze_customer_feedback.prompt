{'code': "###Instruction: Our customer wants to analyze the sentiment of their customers' feedback. The feedback is in Spanish.\n###Output: <<<domain>>>: Natural Language Processing Text Classification\n<<<api_call>>>: pipeline('sentiment-analysis', model='finiteautomata/beto-sentiment-analysis')\n<<<api_provider>>>: Transformers\n<<<explanation>>>: 1. Import the pipeline function from the Transformers library.\n2. Use the pipeline function to create a sentiment analysis model by specifying the type of pipeline ('sentiment-analysis') and the pre-trained model ('finiteautomata/beto-sentiment-analysis'). This model is based on BETO (a BERT model trained in Spanish) and was trained using the TASS 2020 corpus, making it suitable for analyzing sentiment of customer feedback in Spanish.\n3. Pass the available customer feedback text as input to the created sentiment analysis model to obtain the sentiment classification. The model will classify feedback into the categories of Positive (POS), Negative (NEG) and Neutral (NEU).\n<<<code>>>: from transformers import pipeline\nfeedback_sentiment = pipeline('sentiment-analysis', model='finiteautomata/beto-sentiment-analysis')\nsentiment_result = feedback_sentiment(customer_feedback_in_spanish)\n", 'api_call': "pipeline('sentiment-analysis', model='finiteautomata/beto-sentiment-analysis')", 'provider': 'Transformers', 'api_data': {'domain': 'Natural Language Processing Text Classification', 'framework': 'Transformers', 'functionality': 'Sentiment Analysis', 'api_name': 'finiteautomata/beto-sentiment-analysis', 'api_call': "pipeline('sentiment-analysis', model='finiteautomata/beto-sentiment-analysis')", 'api_arguments': 'text', 'python_environment_requirements': 'Hugging Face Transformers library', 'example_code': '', 'performance': {'dataset': 'TASS 2020 corpus', 'accuracy': ''}, 'description': 'Model trained with TASS 2020 corpus (around ~5k tweets) of several dialects of Spanish. Base model is BETO, a BERT model trained in Spanish. Uses POS, NEG, NEU labels.'}}

