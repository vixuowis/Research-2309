{"path": "output/hf-eval-data-v3-valid/f00631_classify_co2_emissions.py", "content": "# function_import --------------------\n\nimport json\nimport joblib\nimport pandas as pd\n\n# function_code --------------------\n\ndef classify_co2_emissions(data_file: str, model_file: str, config_file: str) -> pd.DataFrame:\n    \"\"\"\n    Classify CO2 emissions using a pre-trained model.\n\n    Args:\n        data_file (str): Path to the data file in csv format.\n        model_file (str): Path to the pre-trained model file in joblib format.\n        config_file (str): Path to the configuration file in json format.\n\n    Returns:\n        pd.DataFrame: The predictions made by the model.\n\n    Raises:\n        FileNotFoundError: If any of the input files are not found.\n    \"\"\"\n    model = joblib.load(model_file)\n    config = json.load(open(config_file))\n    features = config['features']\n    data = pd.read_csv(data_file)\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n# test_function_code --------------------\n\ndef test_classify_co2_emissions():\n    \"\"\"Tests the classify_co2_emissions function.\"\"\"\n    data_file = 'test_data.csv'\n    model_file = 'test_model.joblib'\n    config_file = 'test_config.json'\n    try:\n        predictions = classify_co2_emissions(data_file, model_file, config_file)\n        assert isinstance(predictions, pd.DataFrame), 'The result is not a DataFrame.'\n    except FileNotFoundError:\n        print('Test files not found.')\n    else:\n        print('All tests passed.')\n\n# call_test_function_code --------------------\n\ntest_classify_co2_emissions()", "function_import": "# function_import --------------------\n\nimport json\nimport joblib\nimport pandas as pd\n\n", "function_code": "# function_code --------------------\n\ndef classify_co2_emissions(data_file: str, model_file: str, config_file: str) -> pd.DataFrame:\n    \"\"\"\n    Classify CO2 emissions using a pre-trained model.\n\n    Args:\n        data_file (str): Path to the data file in csv format.\n        model_file (str): Path to the pre-trained model file in joblib format.\n        config_file (str): Path to the configuration file in json format.\n\n    Returns:\n        pd.DataFrame: The predictions made by the model.\n\n    Raises:\n        FileNotFoundError: If any of the input files are not found.\n    \"\"\"\n    model = joblib.load(model_file)\n    config = json.load(open(config_file))\n    features = config['features']\n    data = pd.read_csv(data_file)\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_classify_co2_emissions():\n    \"\"\"Tests the classify_co2_emissions function.\"\"\"\n    data_file = 'test_data.csv'\n    model_file = 'test_model.joblib'\n    config_file = 'test_config.json'\n    try:\n        predictions = classify_co2_emissions(data_file, model_file, config_file)\n        assert isinstance(predictions, pd.DataFrame), 'The result is not a DataFrame.'\n    except FileNotFoundError:\n        print('Test files not found.')\n    else:\n        print('All tests passed.')\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_classify_co2_emissions()", "instruct": "# function_import --------------------\n\nimport json\nimport joblib\nimport pandas as pd\n\n# function_code --------------------\n\ndef classify_co2_emissions(data_file: str, model_file: str, config_file: str) -> pd.DataFrame:\n    \"\"\"\n    Classify CO2 emissions using a pre-trained model.\n\n    Args:\n        data_file (str): Path to the data file in csv format.\n        model_file (str): Path to the pre-trained model file in joblib format.\n        config_file (str): Path to the configuration file in json format.\n\n    Returns:\n        pd.DataFrame: The predictions made by the model.\n\n    Raises:\n        FileNotFoundError: If any of the input files are not found.\n    \"\"\"", "answer": "\n    model = joblib.load(model_file)\n    config = json.load(open(config_file))\n    features = config['features']\n    data = pd.read_csv(data_file)\n    data = data[features]\n    data.columns = ['feat_' + str(col) for col in data.columns]\n    predictions = model.predict(data)\n    return predictions\n\n", "prediction": "\n\n    # Check if all the files exist\n    if not (os.path.isfile(data_file)):\n        raise FileNotFoundError(\"Data file not found.\")\n    \n    if not (os.path.isfile(model_file)):\n        raise FileNotFoundError(\"Model file not found.\")\n        \n    if not (os.path.isfile(config_file)):\n        raise FileNotFoundError(\"Config file not found.\")\n\n    # Load the config\n    with open(config_file, \"r\") as fd:\n        config = json.load(fd)\n    \n    # Load the data\n    df = pd.read_csv(data_file)\n\n    # Load the model\n    clf = joblib.load(model_file)\n\n    # Apply the classifier to each row of the dataframe\n    df[config[\"predictions_column\"]] = clf.predict(df[config[\"features_columns\"]])\n    \n    return df"}