{"path": "output/hf-eval-data-v3-valid/f00134_extract_non_compete_clause_info.py", "content": "# function_import --------------------\n\nfrom transformers import pipeline\n\n# function_code --------------------\n\ndef extract_non_compete_clause_info(context: str, question: str) -> str:\n    '''\n    Extracts information about a non-compete clause from a legal document with a context related to data protection.\n\n    Args:\n        context (str): The legal document from which to extract information.\n        question (str): The question related to the non-compete clause.\n\n    Returns:\n        str: The extracted answer based on the given context.\n    '''\n    qa_pipeline = pipeline('question-answering', model='Rakib/roberta-base-on-cuad')\n    answer = qa_pipeline(question=question, context=context)\n    return answer['answer']\n\n# test_function_code --------------------\n\ndef test_extract_non_compete_clause_info():\n    '''\n    Tests the function extract_non_compete_clause_info.\n    '''\n    context = 'The data protection provisions set forth in this agreement shall be in effect for a period of 2 years after the termination of services. The non-compete clause states that the service provider is prohibited from providing similar services to any competitor within a 50-mile radius and during the 1-year period following termination of services.'\n    question = 'What are the terms of the non-compete clause?'\n    assert isinstance(extract_non_compete_clause_info(context, question), str)\n    question = 'What is the duration of the non-compete clause?'\n    assert isinstance(extract_non_compete_clause_info(context, question), str)\n    question = 'What is the radius of the non-compete clause?'\n    assert isinstance(extract_non_compete_clause_info(context, question), str)\n    return 'All Tests Passed'\n\n# call_test_function_code --------------------\n\ntest_extract_non_compete_clause_info()", "function_import": "# function_import --------------------\n\nfrom transformers import pipeline\n\n", "function_code": "# function_code --------------------\n\ndef extract_non_compete_clause_info(context: str, question: str) -> str:\n    '''\n    Extracts information about a non-compete clause from a legal document with a context related to data protection.\n\n    Args:\n        context (str): The legal document from which to extract information.\n        question (str): The question related to the non-compete clause.\n\n    Returns:\n        str: The extracted answer based on the given context.\n    '''\n    qa_pipeline = pipeline('question-answering', model='Rakib/roberta-base-on-cuad')\n    answer = qa_pipeline(question=question, context=context)\n    return answer['answer']\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_extract_non_compete_clause_info():\n    '''\n    Tests the function extract_non_compete_clause_info.\n    '''\n    context = 'The data protection provisions set forth in this agreement shall be in effect for a period of 2 years after the termination of services. The non-compete clause states that the service provider is prohibited from providing similar services to any competitor within a 50-mile radius and during the 1-year period following termination of services.'\n    question = 'What are the terms of the non-compete clause?'\n    assert isinstance(extract_non_compete_clause_info(context, question), str)\n    question = 'What is the duration of the non-compete clause?'\n    assert isinstance(extract_non_compete_clause_info(context, question), str)\n    question = 'What is the radius of the non-compete clause?'\n    assert isinstance(extract_non_compete_clause_info(context, question), str)\n    return 'All Tests Passed'\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_extract_non_compete_clause_info()", "instruct": "# function_import --------------------\n\nfrom transformers import pipeline\n\n# function_code --------------------\n\ndef extract_non_compete_clause_info(context: str, question: str) -> str:\n    '''\n    Extracts information about a non-compete clause from a legal document with a context related to data protection.\n\n    Args:\n        context (str): The legal document from which to extract information.\n        question (str): The question related to the non-compete clause.\n\n    Returns:\n        str: The extracted answer based on the given context.\n    '''", "answer": "\n    qa_pipeline = pipeline('question-answering', model='Rakib/roberta-base-on-cuad')\n    answer = qa_pipeline(question=question, context=context)\n    return answer['answer']\n\n", "prediction": "\n\n    model = pipeline('question-answering')\n\n    result = model(context=context, \n                   question=question)\n    \n    return result['answer']"}