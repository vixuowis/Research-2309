{"path": "output/hf-eval-data-v3-valid/f00059_summarize_text.py", "content": "# function_import --------------------\n\nfrom transformers import PegasusForConditionalGeneration, PegasusTokenizer\nimport requests\n\n# function_code --------------------\n\ndef summarize_text(input_text: str) -> str:\n    \"\"\"\n    Summarizes a given text using the Pegasus model from Hugging Face Transformers.\n\n    Args:\n        input_text (str): The text to be summarized.\n\n    Returns:\n        str: The summarized text.\n\n    Raises:\n        requests.exceptions.ChunkedEncodingError: If there is a connection error while downloading the model.\n    \"\"\"\n    model_name = 'google/pegasus-cnn_dailymail'\n    tokenizer = PegasusTokenizer.from_pretrained(model_name)\n    model = PegasusForConditionalGeneration.from_pretrained(model_name)\n    inputs = tokenizer.encode(input_text, return_tensors='pt')\n    summary_ids = model.generate(inputs)\n    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)\n    return summary\n\n# test_function_code --------------------\n\ndef test_summarize_text():\n    \"\"\"\n    Tests the summarize_text function with some example texts.\n    \"\"\"\n    input_text1 = 'A new study suggests that eating chocolate at least once a week can lead to better cognition.'\n    input_text2 = 'The study, published in the journal Appetite, analyzed data from over 900 adults and found that individuals who consumed chocolate at least once a week performed better on cognitive tests than those who consumed chocolate less frequently.'\n    input_text3 = 'Researchers believe that the beneficial effects of chocolate on cognition may be due to the presence of flavonoids, which have been shown to be antioxidant-rich and to improve brain blood flow.'\n    assert len(summarize_text(input_text1)) > 0\n    assert len(summarize_text(input_text2)) > 0\n    assert len(summarize_text(input_text3)) > 0\n    return 'All Tests Passed'\n\n# call_test_function_code --------------------\n\ntest_summarize_text()", "function_import": "# function_import --------------------\n\nfrom transformers import PegasusForConditionalGeneration, PegasusTokenizer\nimport requests\n\n", "function_code": "# function_code --------------------\n\ndef summarize_text(input_text: str) -> str:\n    \"\"\"\n    Summarizes a given text using the Pegasus model from Hugging Face Transformers.\n\n    Args:\n        input_text (str): The text to be summarized.\n\n    Returns:\n        str: The summarized text.\n\n    Raises:\n        requests.exceptions.ChunkedEncodingError: If there is a connection error while downloading the model.\n    \"\"\"\n    model_name = 'google/pegasus-cnn_dailymail'\n    tokenizer = PegasusTokenizer.from_pretrained(model_name)\n    model = PegasusForConditionalGeneration.from_pretrained(model_name)\n    inputs = tokenizer.encode(input_text, return_tensors='pt')\n    summary_ids = model.generate(inputs)\n    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)\n    return summary\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_summarize_text():\n    \"\"\"\n    Tests the summarize_text function with some example texts.\n    \"\"\"\n    input_text1 = 'A new study suggests that eating chocolate at least once a week can lead to better cognition.'\n    input_text2 = 'The study, published in the journal Appetite, analyzed data from over 900 adults and found that individuals who consumed chocolate at least once a week performed better on cognitive tests than those who consumed chocolate less frequently.'\n    input_text3 = 'Researchers believe that the beneficial effects of chocolate on cognition may be due to the presence of flavonoids, which have been shown to be antioxidant-rich and to improve brain blood flow.'\n    assert len(summarize_text(input_text1)) > 0\n    assert len(summarize_text(input_text2)) > 0\n    assert len(summarize_text(input_text3)) > 0\n    return 'All Tests Passed'\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_summarize_text()", "instruct": "# function_import --------------------\n\nfrom transformers import PegasusForConditionalGeneration, PegasusTokenizer\nimport requests\n\n# function_code --------------------\n\ndef summarize_text(input_text: str) -> str:\n    \"\"\"\n    Summarizes a given text using the Pegasus model from Hugging Face Transformers.\n\n    Args:\n        input_text (str): The text to be summarized.\n\n    Returns:\n        str: The summarized text.\n\n    Raises:\n        requests.exceptions.ChunkedEncodingError: If there is a connection error while downloading the model.\n    \"\"\"", "answer": "\n    model_name = 'google/pegasus-cnn_dailymail'\n    tokenizer = PegasusTokenizer.from_pretrained(model_name)\n    model = PegasusForConditionalGeneration.from_pretrained(model_name)\n    inputs = tokenizer.encode(input_text, return_tensors='pt')\n    summary_ids = model.generate(inputs)\n    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)\n    return summary\n\n", "prediction": "\n    \n    # Loading tokenizer and model\n    try:\n        model = PegasusForConditionalGeneration.from_pretrained(\"google/pegasus-xsum\")\n        \n    except requests.exceptions.ChunkedEncodingError as e:\n        print(\"There was a connection error while downloading the model, please check your internet connection.\")\n        exit() \n    \n    tokenizer = PegasusTokenizer.from_pretrained(\"google/pegasus-xsum\")\n\n    # Tokenize the text and generate tokens of batch size 1\n    input_ids = tokenizer(input_text, truncation=True, padding='longest', return_tensors=\"pt\").input_ids\n    \n    if len(input_ids) == 0:\n        print(\"The input text is empty.\")\n        exit() \n\n    # Generate the summarized text\n    summary = model.generate(input_ids, max_length=256, length_penalty=1.0, num_beams=4)\n\n    return tokenizer.batch_decode(summary, skip_special_tokens=True)[0]"}