{"path": "output/hf-eval-data-v3-valid/f00359_classify_computer_parts.py", "content": "# function_import --------------------\n\nfrom transformers import ViTImageProcessor, ViTForImageClassification\nfrom PIL import Image\nimport requests\n\n# function_code --------------------\n\ndef classify_computer_parts(user_uploaded_image_file_path):\n    '''\n    Classify the computer parts in the image uploaded by the user.\n\n    Args:\n        user_uploaded_image_file_path (str): The file path of the image uploaded by the user.\n\n    Returns:\n        str: The predicted label of the computer part in the image.\n    '''\n    processor = ViTImageProcessor.from_pretrained('google/vit-base-patch16-224')\n    model = ViTForImageClassification.from_pretrained('google/vit-base-patch16-224')\n\n    image = Image.open(user_uploaded_image_file_path)\n    inputs = processor(images=image, return_tensors='pt')\n    outputs = model(**inputs)\n    logits = outputs.logits\n    predicted_class_idx = logits.argmax(-1).item()\n    predicted_label = model.config.id2label[predicted_class_idx]\n\n    return predicted_label\n\n# test_function_code --------------------\n\ndef test_classify_computer_parts():\n    '''\n    Test the function classify_computer_parts.\n    '''\n    url = 'https://placekitten.com/200/300'\n    response = requests.get(url, stream=True)\n    with open('test_image.jpg', 'wb') as f:\n        f.write(response.content)\n\n    predicted_label = classify_computer_parts('test_image.jpg')\n    assert isinstance(predicted_label, str), 'The predicted label should be a string.'\n\n    print('All Tests Passed')\n\n# call_test_function_code --------------------\n\ntest_classify_computer_parts()", "function_import": "# function_import --------------------\n\nfrom transformers import ViTImageProcessor, ViTForImageClassification\nfrom PIL import Image\nimport requests\n\n", "function_code": "# function_code --------------------\n\ndef classify_computer_parts(user_uploaded_image_file_path):\n    '''\n    Classify the computer parts in the image uploaded by the user.\n\n    Args:\n        user_uploaded_image_file_path (str): The file path of the image uploaded by the user.\n\n    Returns:\n        str: The predicted label of the computer part in the image.\n    '''\n    processor = ViTImageProcessor.from_pretrained('google/vit-base-patch16-224')\n    model = ViTForImageClassification.from_pretrained('google/vit-base-patch16-224')\n\n    image = Image.open(user_uploaded_image_file_path)\n    inputs = processor(images=image, return_tensors='pt')\n    outputs = model(**inputs)\n    logits = outputs.logits\n    predicted_class_idx = logits.argmax(-1).item()\n    predicted_label = model.config.id2label[predicted_class_idx]\n\n    return predicted_label\n\n", "test_function_code": "# test_function_code --------------------\n\ndef test_classify_computer_parts():\n    '''\n    Test the function classify_computer_parts.\n    '''\n    url = 'https://placekitten.com/200/300'\n    response = requests.get(url, stream=True)\n    with open('test_image.jpg', 'wb') as f:\n        f.write(response.content)\n\n    predicted_label = classify_computer_parts('test_image.jpg')\n    assert isinstance(predicted_label, str), 'The predicted label should be a string.'\n\n    print('All Tests Passed')\n\n", "call_test_function_code": "# call_test_function_code --------------------\n\ntest_classify_computer_parts()", "instruct": "# function_import --------------------\n\nfrom transformers import ViTImageProcessor, ViTForImageClassification\nfrom PIL import Image\nimport requests\n\n# function_code --------------------\n\ndef classify_computer_parts(user_uploaded_image_file_path):\n    '''\n    Classify the computer parts in the image uploaded by the user.\n\n    Args:\n        user_uploaded_image_file_path (str): The file path of the image uploaded by the user.\n\n    Returns:\n        str: The predicted label of the computer part in the image.\n    '''", "answer": "\n    processor = ViTImageProcessor.from_pretrained('google/vit-base-patch16-224')\n    model = ViTForImageClassification.from_pretrained('google/vit-base-patch16-224')\n\n    image = Image.open(user_uploaded_image_file_path)\n    inputs = processor(images=image, return_tensors='pt')\n    outputs = model(**inputs)\n    logits = outputs.logits\n    predicted_class_idx = logits.argmax(-1).item()\n    predicted_label = model.config.id2label[predicted_class_idx]\n\n    return predicted_label\n\n", "prediction": "\n\n    processor = ViTImageProcessor(is_training=False, image_size=384)\n    model = ViTForImageClassification.from_pretrained(\"hustee/computer-parts\")\n    \n    with Image.open(user_uploaded_image_file_path) as img:\n        processed_img = processor(images=img, return_tensors=\"pt\")[0] # batch size is one by default\n        \n    predicted_label = model(**processed_img).logits.argmax().item()\n    \n    labels_dict = {0: \"cpu\", 1: \"motherboard\", 2: \"graphics card\", 3: \"memory\", 4: \"hard disk drive\", 5: \"optical disk drive\", 6: \"power supply\"}\n\n    return labels_dict[predicted_label] # predicted label of the computer part in the image\n"}