# function_import --------------------

from transformers import pipeline

# function_code --------------------

def detect_gpt2_generated_text(text):
    """
    Detect if the given text is generated by GPT-2 model.

    Args:
        text (str): The text to be checked.

    Returns:
        dict: The prediction result, indicating whether the text was generated by GPT-2 or not.
    """
    
    # Setup the pipeline and predict
    summarizer = pipeline("summarization")
    predict_result = summarizer(text)
    
    # Detect if the given text is generated by GPT-2 model
    gpt2_generated = False
    for pred in predict_result:
        if pred["summary_text"] == text or len(pred["summary_text"].split()) <= 5:
            continue
        
        # Get the ratio of overlapping words with reference text
        overlap_ratio = get_overlap_ratio(text, pred["summary_text"])
        
        # Update gpt2_generated
        if overlap_ratio > 0.5:
            gpt2_generated = True
    
    return {"generated": gpt2_generated}


# test_function_code --------------------

def test_detect_gpt2_generated_text():
    """
    Test the function detect_gpt2_generated_text.
    """
    # Test case 1: AI-generated text
    text1 = 'In a shocking turn of events, the city council has decided to turn the entire city into a giant amusement park.'
    prediction1 = detect_gpt2_generated_text(text1)
    assert isinstance(prediction1, list), 'The result should be a list.'

    # Test case 2: Human-written text
    text2 = 'Hello world! This is a test.'
    prediction2 = detect_gpt2_generated_text(text2)
    assert isinstance(prediction2, list), 'The result should be a list.'

    return 'All Tests Passed'


# call_test_function_code --------------------

test_detect_gpt2_generated_text()