{'code': '###Instruction: Give me a tool to detect named entities in multiple languages for my news portal analysis.\n###Output: <<<domain>>>: Natural Language Processing Token Classification\n<<<api_call>>>: AutoModelForTokenClassification.from_pretrained(\'Davlan/distilbert-base-multilingual-cased-ner-hrl\')\n<<<api_provider>>>: Transformers\n<<<explanation>>>: 1. We import the required classes from the transformers library, including AutoTokenizer, AutoModelForTokenClassification, and pipeline.\n2. We load the tokenizer and model using the from_pretrained method with the given model name \'Davlan/distilbert-base-multilingual-cased-ner-hrl\'. This is a multilingual named entity recognition model that can recognize entities in multiple languages.\n3. Create a pipeline for named entity recognition (NER) using the loaded model and tokenizer.\n4. Use the NER pipeline to process text from the news portal, and it will return the recognized named entities in the text.\n<<<code>>>: from transformers import AutoTokenizer, AutoModelForTokenClassification\nfrom transformers import pipeline\ntokenizer = AutoTokenizer.from_pretrained(\'Davlan/distilbert-base-multilingual-cased-ner-hrl\')\nmodel = AutoModelForTokenClassification.from_pretrained(\'Davlan/distilbert-base-multilingual-cased-ner-hrl\')\nnlp = pipeline(\'ner\', model=model, tokenizer=tokenizer)\nexample = "Nader Jokhadar had given Syria the lead with a well-struck header in the seventh minute."\nner_results = nlp(example)\nprint(ner_results)', 'api_call': "AutoModelForTokenClassification.from_pretrained('Davlan/distilbert-base-multilingual-cased-ner-hrl')", 'provider': 'Transformers', 'api_data': {'domain': 'Natural Language Processing Token Classification', 'framework': 'Transformers', 'functionality': 'Named Entity Recognition', 'api_name': 'distilbert-base-multilingual-cased-ner-hrl', 'api_call': "AutoModelForTokenClassification.from_pretrained('Davlan/distilbert-base-multilingual-cased-ner-hrl')", 'api_arguments': {'model': 'Davlan/distilbert-base-multilingual-cased-ner-hrl', 'tokenizer': 'Davlan/distilbert-base-multilingual-cased-ner-hrl'}, 'python_environment_requirements': ['transformers'], 'example_code': 'from transformers import AutoTokenizer, AutoModelForTokenClassification\nfrom transformers import pipeline\ntokenizer = AutoTokenizer.from_pretrained(Davlan/distilbert-base-multilingual-cased-ner-hrl)\nmodel = AutoModelForTokenClassification.from_pretrained(Davlan/distilbert-base-multilingual-cased-ner-hrl)\nnlp = pipeline(ner, model=model, tokenizer=tokenizer)\nexample = Nader Jokhadar had given Syria the lead with a well-struck header in the seventh minute.\nner_results = nlp(example)\nprint(ner_results)', 'performance': {'dataset': [{'name': 'ANERcorp', 'language': 'Arabic'}, {'name': 'conll 2003', 'language': 'German'}, {'name': 'conll 2003', 'language': 'English'}, {'name': 'conll 2002', 'language': 'Spanish'}, {'name': 'Europeana Newspapers', 'language': 'French'}, {'name': 'Italian I-CAB', 'language': 'Italian'}, {'name': 'Latvian NER', 'language': 'Latvian'}, {'name': 'conll 2002', 'language': 'Dutch'}, {'name': 'Paramopama + Second Harem', 'language': 'Portuguese'}, {'name': 'MSRA', 'language': 'Chinese'}], 'accuracy': 'Not specified'}, 'description': 'distilbert-base-multilingual-cased-ner-hrl is a Named Entity Recognition model for 10 high resourced languages (Arabic, German, English, Spanish, French, Italian, Latvian, Dutch, Portuguese and Chinese) based on a fine-tuned Distiled BERT base model. It has been trained to recognize three types of entities: location (LOC), organizations (ORG), and person (PER).'}}


