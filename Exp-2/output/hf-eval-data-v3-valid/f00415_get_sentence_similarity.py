# function_import --------------------

from sentence_transformers import SentenceTransformer
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

# function_code --------------------

def get_sentence_similarity(sentences):
    """
    This function takes a list of sentences and returns a similarity matrix.
    The similarity is calculated based on the embeddings generated by the SentenceTransformer model.

    Args:
        sentences (list): A list of sentences for which the similarity is to be calculated.

    Returns:
        np.array: A 2D numpy array representing the similarity matrix.
    """
    model = SentenceTransformer('nikcheerla/nooks-amd-detection-v2-full')
    embeddings = model.encode(sentences)
    similarity_matrix = cosine_similarity(embeddings)
    return similarity_matrix

# test_function_code --------------------

def test_get_sentence_similarity():
    sentences = ['This is a test sentence', 'This is another test sentence', 'This is yet another test sentence']
    similarity_matrix = get_sentence_similarity(sentences)
    assert isinstance(similarity_matrix, np.ndarray), 'The result should be a numpy array'
    assert similarity_matrix.shape == (len(sentences), len(sentences)), 'The shape of the similarity matrix should be (n, n) where n is the number of sentences'
    return 'All Tests Passed'

# call_test_function_code --------------------

test_get_sentence_similarity()