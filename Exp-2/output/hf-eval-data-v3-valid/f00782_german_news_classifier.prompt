{'code': "###Instruction: I need to classify German news articles into categories like crime, tragedy, and theft. The classifier should be able to understand German as well.\n###Output: <<<domain>>>: Natural Language Processing Zero-Shot Classification\n<<<api_call>>>: classifier(sequence, candidate_labels, hypothesis_template=hypothesis_template)\n<<<api_provider>>>: Transformers\n<<<explanation>>>: 1. We import the pipeline function from the transformers library provided by Hugging Face.\n2. Create a zero-shot classification model using the German pre-trained model 'Sahajtomar/German_Zeroshot' to classify text into predefined categories.\n3. Use the pipeline function with the specified model to instantiate the classifier.\n4. Pass the German news article as the 'sequence' parameter, the list of candidate_labels as ['Verbrechen', 'Tragödie', 'Stehlen'] (crime, tragedy, and theft in German), and a suitable German hypothesis_template like 'In diesem Text geht es um {}.'\n5. The classifier will then classify the input text into one of the specified categories based on semantic understanding.\n<<<code>>>: from transformers import pipeline\nclassifier = pipeline('zero-shot-classification', model='Sahajtomar/German_Zeroshot')\nsequence = 'Letzte Woche gab es einen Selbstmord in einer nahe gelegenen Kolonie'\ncandidate_labels = ['Verbrechen', 'Tragödie', 'Stehlen']\nhypothesis_template = 'In diesem Text geht es um {}.'\nresult = classifier(sequence, candidate_labels, hypothesis_template=hypothesis_template)\n", 'api_call': 'classifier(sequence, candidate_labels, hypothesis_template=hypothesis_template)', 'provider': 'Transformers', 'api_data': {'domain': 'Natural Language Processing Zero-Shot Classification', 'framework': 'Transformers', 'functionality': 'Zero-Shot Classification', 'api_name': "AutoModelForSequenceClassification.from_pretrained('Sahajtomar/German_Zeroshot')", 'api_call': 'classifier(sequence, candidate_labels, hypothesis_template=hypothesis_template)', 'api_arguments': {'sequence': 'string', 'candidate_labels': 'list of strings', 'hypothesis_template': 'string'}, 'python_environment_requirements': ['transformers'], 'example_code': 'from transformers import pipeline\nclassifier = pipeline(zero-shot-classification, model=Sahajtomar/German_Zeroshot)\nsequence = Letzte Woche gab es einen Selbstmord in einer nahe gelegenen kolonie\ncandidate_labels = [Verbrechen,Tragödie,Stehlen]\nhypothesis_template = In deisem geht es um {}. ## Since monolingual model,its sensitive to hypothesis template. This can be experimented\nclassifier(sequence, candidate_labels, hypothesis_template=hypothesis_template)', 'performance': {'dataset': {'XNLI DEV (german)': {'accuracy': 85.5}, 'XNLI TEST (german)': {'accuracy': 83.6}}}, 'description': 'This model has GBERT Large as base model and fine-tuned it on xnli de dataset. The default hypothesis template is in English: This text is {}. While using this model, change it to In deisem geht es um {}. or something different. While inferencing through huggingface api may give poor results as it uses by default english template. Since model is monolingual and not multilingual, hypothesis template needs to be changed accordingly.'}}

